{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap 3d20638fa56d6a3a53c6","webpack:///src/index.js","webpack:///src/Account.js","webpack:///src/request.js","webpack:///src/Config.js","webpack:///src/Error.js","webpack:///~/extendable-error-class/dist/index.es5.js","webpack:///src/Sessions.js","webpack:///src/Order.js","webpack:///src/Funding.js","webpack:///src/Reports.js","webpack:///src/Instrument.js","webpack:///src/User.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","_Account","_Error","_Funding","_Instrument","_Order","_Reports","_User","_Sessions","_Config","_request","ENVIRONMENTS","HOSTS","Account","Config","Error","Funding","Instrument","Order","Reports","User","Sessions","setup","request","data","_classCallCheck","Object","assign","type","arguments","length","undefined","getBlotter","userID","accountID","getPerformance","apply","concat","Array","prototype","slice","parentDetails","accountNo","accountType","_Order2","default","create","options","_Funding2","getFundingMethods","startDate","endDate","_Reports2","getTransactions","getPlacedOrders","getStatements","getTaxDocuments","getTradeConfirms","fileKey","generateDownloadURL","getSubscription","extractIDs","addSubscription","updateSubscription","cancelSubscription","_request2","method","endpoint","sessionKey","_Sessions2","get","then","_ref","body","orders","map","order","queryString","getFullYear","getMonth","getDate","_ref2","performance","_ref3","account","TYPES","PRACTICE","responseType","tranAmount","_ref4","_ref5","planID","paymentID","params","startsWith","_defineProperty","keys","filter","key","reduce","x","y","_ref7","changeSubscription","BLOTTER_TYPES","CASH","ORDERS","TRANSACTIONS","POSITIONS","ALL","STATUSES","PENDING","OPEN","OPEN_NO_NEW_TRADES","CLOSED","LIVE","_ref$method","_ref$addlHeaders","addlHeaders","_ref$host","host","API","headers","Accept","header","env","JSON","stringify","Promise","resolve","reject","httpImpl","statusCode","resHeaders","resBody","contentType","indexOf","parse","err","String","errorMessage","message","error","DriveWealthSessionError","DriveWealthError","appTypeID","appVersion","_ref$wlpID","wlpID","appsPartnerID","referralCode","APPS","REPORTS","UAT","_UAT","PROD","_PROD","_extendableErrorClass","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_this2","instance","Constructor","TypeError","self","ReferenceError","_inherits","subClass","superClass","constructor","value","enumerable","writable","configurable","setPrototypeOf","_extendableBuiltin","cls","ExtendableBuiltin","Reflect","construct","from","ExtendableError","_extendableBuiltin2","name","captureStackTrace","stack","_keys","_mainUser","sessions","SEC_FEE_RATE","SEC_FEE_MIN","SEC_FEE_MAX","Number","POSITIVE_INFINITY","TAF_FEE_RATE","TAF_FEE_MIN","TAF_FEE_MAX","rejectionReason","ordRejReason","status","ordStatus","ordType","orderType","price","stopPrice","limitPrice","cancel","orderID","getAny","_ref3$order","instrument","side","qty","amountCash","comment","autoStop","_ref3$waitForFill","waitForFill","_ref3$fillRetryInterv","fillRetryInterval","_ref3$fillMaxRetries","fillMaxRetries","MARKET","instrumentID","orderQty","STOP","LIMIT","retries","checkStatus","getByID","NEW","PARTIAL_FILL","setTimeout","_ref6","_ref6$waitForFill","_ref6$fillRetryInterv","_ref6$fillMaxRetries","SIDES","BUY","orderResults","ordersMap","acc","next","idx","referenceID","all","statusDetails","shouldRetry","reference","thisStatus","commissionSchedule","isArray","total","totalFeesOnly","basketPrice","basketSchedule","schedule","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","scheduleItem","basketSize","return","byOrder","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","marketPrice","orderPrice","fractionalRate","baseRate","NEAREST","Math","round","CEIL","ceil","FLOOR","floor","shareAmountRounding","max","baseShares","excessRate","secFee","tafFee","passThroughFees","SELL","min","orderTotal","commission","fees","sec","taf","multipleOrderDelta","FILL","CANCELED","REJECTED","language","minAmount","maxAmount","amount","_ref$filters","filters","country","currency","allowed","pricing","sort","ALLOWED_TYPES","DEPOSIT","WITHDRAW","DEPOSIT_AND_WITHDRAW","toISOString","transaction","url","getQuote","symbol","compression","getChartData","symbols","join","includeFundamentals","tradeStatus","criteria","sym","obj","split","rawQuote","parsedQuote","bid","ask","timeParams","dateStart","replace","dateEnd","TRADE_STATUSES","INACTIVE","ACTIVE","CHART_COMPRESSIONS","DAY","MINUTE_1","MINUTE_5","MINUTE_30","HOUR","WEEK","_listCreditCards","_ref9","_addCreditCard","cardToken","_ref10","_removeCreditCard","cardID","fullName","firstName","lastName","_Account2","getListForUserID","_arguments","getSettings","setSetting","remove","file","uploadDocument","formattedData","setting","username","password","languageID","osType","osVersion","scrRes","ipAddress","save","getByUserID","rejection","email","_ref6$referralCode","utmCampaign","utmContent","utmMedium","utmSource","utmTerm","loginAutomatically","emailAddress1","login","addressLine1","addressLine2","city","countryID","phoneHome","phoneWork","phone","stateProvince","zipPostalCode","phoneMobile","_ref8","FormData","append","Content-Type","APPROVED","REVOKED","DOCUMENT_TYPES","PHOTO_ID","PROOF_OF_ADDRESS","PHOTO_ID_WITH_PROOF_OF_ADDRESS"],"mappings":"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","file":"drivewealth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drivewealth\"] = factory();\n\telse\n\t\troot[\"drivewealth\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3d20638fa56d6a3a53c6","import Account from \"./Account\";\nimport Error from \"./Error\";\nimport Funding from \"./Funding\";\nimport Instrument from \"./Instrument\";\nimport Order from \"./Order\";\nimport Reports from \"./Reports\";\nimport User from \"./User\";\nimport Sessions from \"./Sessions\";\nimport { Config, setup, ENVIRONMENTS, HOSTS } from \"./Config\";\nimport request from \"./request\";\n\nexport default {\n\tENVIRONMENTS,\n\tHOSTS,\n\n\tAccount,\n\tConfig,\n\tError,\n\tFunding,\n\tInstrument,\n\tOrder,\n\tReports,\n\tUser,\n\tSessions,\n\n\tsetup,\n\trequest,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/* @flow */\nimport request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport Order from \"./Order\";\nimport Funding from \"./Funding\";\nimport Reports from \"./Reports\";\n\nimport type { OrderParentDetails } from \"./Order\";\n\nexport type CommissionSchedule = {\n\tbaseRate: number,\n\tbaseShares: number,\n\texcessRate: number,\n\tfractionalRate: number,\n\tshareAmountRounding: number,\n\tsubscription: boolean,\n\tbasketSchedule: {\n\t\tbaseShares: number,\n\t\texcessRate: number,\n\t\tschedule: Array<{\n\t\t\tbasketSize: number,\n\t\t\tbasketPrice: number,\n\t\t}>,\n\t},\n\tpassThroughFees: boolean,\n};\n\n/**\n * @class Account\n * @description An account belonging to a User. Use the constructor if you have a flat JSON object that you would like to access instance methods on.\n * @param {object} data - See response at http://developer.drivewealth.com/docs/accounts_get\n */\nexport default class Account {\n\taccountID: string;\n\taccountNo: string;\n\tuserID: string;\n\taccountType: string;\n\tcurrencyID: string;\n\tibID: string;\n\tmargin: string;\n\tnickname: string;\n\topenedWhen: string;\n\tpatternDayTrades: string;\n\tstatus: string;\n\ttradingType: string;\n\taccountMgmtType: string;\n\tcommissionSchedule: CommissionSchedule;\n\n\tconstructor(data: Object) {\n\t\tObject.assign(this, data);\n\t}\n\n\t/**\n\t * @name BLOTTER_TYPES\n\t * @memberof Account\n\t * @constant\n\t * @property {string} CASH\n\t * @property {string} ORDERS\n\t * @property {string} TRANSACTIONS\n\t * @property {string} POSITIONS\n\t * @property {string} ALL\n\t */\n\tstatic BLOTTER_TYPES: {[type: string]: ?string} = {\n\t\tCASH: \"cash\",\n\t\tORDERS: \"orders\",\n\t\tTRANSACTIONS: \"transactions\",\n\t\tPOSITIONS: \"positions\",\n\t\tALL: null,\n\t};\n\n\t/**\n\t * @name STATUSES\n\t * @memberof Account\n\t * @constant\n\t * @property {number} PENDING\n\t * @property {number} OPEN\n\t * @property {number} OPEN_NO_NEW_TRADES\n\t * @property {number} CLOSED\n\t */\n\tstatic STATUSES: {[status: string]: number} = {\n\t\tPENDING: 1,\n\t\tOPEN: 2,\n\t\tOPEN_NO_NEW_TRADES: 3,\n\t\tCLOSED: 9,\n\t};\n\n\t/**\n\t * @name TYPES\n\t * @memberof Account\n\t * @constant\n\t * @property {number} PRACTICE\n\t * @property {number} LIVE\n\t */\n\tstatic TYPES: {[type: string]: number} = {\n\t\tPRACTICE: 1,\n\t\tLIVE: 2,\n\t};\n\n\t/**\n\t * @instance\n\t */\n\tgetBlotter(type: ?string = null): Promise<Object> {\n\t\treturn Account.getBlotter(this.userID, this.accountID, type);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getBlotter(userID: string, accountID: string, type: ?string = null): Promise<Object> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/accountSummary/`\n\t\t\t\t+ `${accountID}${type ? \"/\" + type : \"\"}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => {\n\t\t\tif (body.orders) {\n\t\t\t\tbody.orders = body.orders.map((order) => new Order(order));\n\t\t\t}\n\t\t\treturn type ? body[type] : body;\n\t\t});\n\t}\n\n\t/**\n\t * @param {Date} startDate\n\t * @param {Date} endDate\n\t */\n\t/**\n\t  * @param {string} period\n\t  */\n\t/**\n\t  * @description Get today's performance\n\t  */\n\tgetPerformance(): Promise<Object> {\n\t\treturn Account.getPerformance(this.userID, this.accountID, ...arguments);\n\t}\n\n\t/**\n\t * @param {Date} startDate\n\t * @param {Date} endDate\n\t */\n\t/**\n\t  * @param {string} period\n\t  */\n\t/**\n\t  * @description Get today's performance\n\t  */\n\tstatic getPerformance(userID: string, accountID: string): Promise<Object> {\n\t\tlet queryString = \"\";\n\t\tif (arguments.length === 4) {\n\t\t\tconst startDate = arguments[2];\n\t\t\tconst endDate = arguments[3];\n\t\t\tqueryString += \"/dateRange?\";\n\t\t\tqueryString += `startDate=${startDate.getFullYear()}${(\"0\" + (startDate.getMonth() + 1)).slice(-2)}${(\"0\" + startDate.getDate()).slice(-2)}`;\n\t\t\tqueryString += `&endDate=${endDate.getFullYear()}${(\"0\" + (endDate.getMonth() + 1)).slice(-2)}${(\"0\" + endDate.getDate()).slice(-2)}`;\n\t\t} else if (arguments.length === 3) {\n\t\t\tqueryString += `/history?period=${arguments[2]}`;\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/accountPerformance/${accountID}${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.performance);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tplaceOrder(type: string, data: Object): Promise<string | Object> {\n\t\tconst parentDetails: OrderParentDetails = {\n\t\t\taccountID: this.accountID,\n\t\t\taccountNo: this.accountNo,\n\t\t\taccountType: this.accountType,\n\t\t\tuserID: this.userID,\n\t\t};\n\n\t\treturn Order.create(type, parentDetails, data);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetFundingMethods(options: Object = {}): Promise<Array<Object>> {\n\t\toptions.userID = this.userID;\n\t\toptions.accountID = this.accountID;\n\t\treturn Funding.getFundingMethods(options);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetTransactions(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getTransactions(this.userID, this.accountNo, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetPlacedOrders(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getPlacedOrders(this.userID, this.accountNo, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetStatements(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getStatements(this.userID, this.accountID, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetTaxDocuments(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getTaxDocuments(this.userID, this.accountID, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetTradeConfirms(startDate: Date, endDate: Date): Promise<Array<Object>> {\n\t\treturn Reports.getTradeConfirms(this.userID, this.accountID, startDate, endDate);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgenerateDownloadURL(fileKey: string): Promise<Array<Object>> {\n\t\treturn Reports.generateDownloadURL(this.userID, this.accountID, fileKey);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getListForUserID(userID: string): Promise<Array<Account>> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/accounts`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.map(account => new Account(account)));\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic create(userID: string, type: string, data: Object) {\n\t\tif (type === Account.TYPES.PRACTICE) {\n\t\t\tdata = {\n\t\t\t\tuserID,\n\t\t\t\tresponseType: \"full\",\n\t\t\t\ttranAmount: data,\n\t\t\t};\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: type === Account.TYPES.PRACTICE\n\t\t\t\t? \"/signups/practice\"\n\t\t\t\t: \"/signups/live\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: data,\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @param {string} method\n\t * @param {object} options\n\t */\n\tstatic changeSubscription(method: string, {\n\t\tuserID,\n\t\taccountID,\n\t\tplanID,\n\t\tpaymentID,\n\t}: {\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tplanID: string,\n\t\tpaymentID: string,\n\t}): Promise<Object> {\n\t\tconst params = {\n\t\t\tmethod,\n\t\t\tendpoint: `/users/${userID}/accounts/${accountID}/subscriptions`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: method.startsWith(\"P\") && {\n\t\t\t\tplanID,\n\t\t\t\t[paymentID.startsWith(\"card\") ? \"cardID\" : \"bankAccountID\"]: paymentID,\n\t\t\t},\n\t\t};\n\n\t\treturn request(\n\t\t\tObject.keys(params)\n\t\t\t\t.filter(key => params[key])\n\t\t\t\t.reduce((x, y) => Object.assign({}, x, { [y]: params[y] }), {}),\n\t\t).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getSubscription(options: Object): Promise<Object> {\n\t\treturn Account.changeSubscription(\"GET\", options);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic addSubscription(options: Object): Promise<Object> {\n\t\treturn Account.changeSubscription(\"POST\", options);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic updateSubscription(options: Object): Promise<Object> {\n\t\treturn Account.changeSubscription(\"PUT\", options);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic cancelSubscription(options: Object): Promise<Object> {\n\t\treturn Account.changeSubscription(\"DELETE\", options);\n\t}\n\n\textractIDs(options: Object): Object {\n\t\treturn Object.assign({}, options, {\n\t\t\tuserID: this.userID,\n\t\t\taccountID: this.accountID,\n\t\t});\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetSubscription(): Promise<Object> {\n\t\treturn Account.getSubscription(this.extractIDs());\n\t}\n\n\t/**\n\t * @instance\n\t */\n\taddSubscription(options: Object): Promise<Object> {\n\t\treturn Account.addSubscription(this.extractIDs(options));\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tupdateSubscription(options: Object): Promise<Object> {\n\t\treturn Account.updateSubscription(this.extractIDs(options));\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tcancelSubscription(): Promise<Object> {\n\t\treturn Account.cancelSubscription(this.extractIDs());\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Account.js","/* @flow */\nimport { Config, HOSTS } from \"./Config\";\nimport { DriveWealthError, DriveWealthSessionError } from \"./Error\";\n\n/**\n * @function request\n * @description Normally, it is unnecessary to use this function and this is for internal use only. Call request() if you need to make a custom API call that is not covered by another function.\n * @param {object} options\n * @param {string} options.method\n * @param {string} options.endpoint\n * @param {string} options.sessionKey\n * @param {string} options.body\n * @param {Object.<string, string>} options.addlHeaders\n * @param {string} options.host - One of Config.HOSTS\n * @returns {Promise.<{body: string, statusCode: number, headers: Object<string, string>}>}\n */\nexport default function request({\n\tmethod = \"GET\",\n\tendpoint,\n\tsessionKey,\n\tbody,\n\taddlHeaders = {},\n\thost = HOSTS.API,\n}: {\n\tmethod?: string,\n\tendpoint: string,\n\tsessionKey?: string,\n\tbody?: any,\n\taddlHeaders?: {[header: string]: string},\n\thost?: string,\n}) {\n\tconst headers: {[header: string]: string} = {\n\t\tAccept: \"application/json\",\n\t};\n\tif (method === \"POST\" || method === \"PUT\" || method === \"PATCH\") {\n\t\theaders[\"Content-Type\"] = \"application/json\";\n\t}\n\tif (sessionKey) {\n\t\theaders[\"x-mysolomeo-session-key\"] = sessionKey;\n\t}\n\tfor (const header in addlHeaders) {\n\t\theaders[header] = addlHeaders[header];\n\t}\n\n\tendpoint = Config.env[host] + endpoint;\n\n\tif (headers[\"Content-Type\"] === \"application/json\") body = JSON.stringify(body);\n\n\treturn new Promise((resolve, reject) => {\n\t\tConfig.httpImpl(method, endpoint, headers, body, (statusCode, resHeaders, resBody) => {\n\t\t\tconst contentType = resHeaders[\"Content-Type\"] || resHeaders[\"content-type\"] || \"\";\n\t\t\tif (resBody && contentType.indexOf(\"application/json\") !== -1) {\n\t\t\t\ttry {\n\t\t\t\t\tresBody = JSON.parse(resBody);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// resBody will remain as is\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (String(statusCode)[0] === \"2\" || String(statusCode)[0] === \"3\") {\n\t\t\t\tresolve({\n\t\t\t\t\tbody: resBody,\n\t\t\t\t\tstatusCode,\n\t\t\t\t\theaders: resHeaders,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet errorMessage;\n\t\t\t\tif (resBody) {\n\t\t\t\t\terrorMessage = resBody.message || JSON.stringify(resBody);\n\t\t\t\t}\n\t\t\t\tconst error = statusCode === 401\n\t\t\t\t\t? new DriveWealthSessionError(errorMessage, resBody, statusCode, resHeaders)\n\t\t\t\t\t: new DriveWealthError(errorMessage, resBody, statusCode, resHeaders);\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t});\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","/**\n * @namespace Config\n */\nexport const Config = {\n\tenv: null,\n\thttpImpl: null,\n\tappTypeID: null,\n\tappVersion: null,\n\twlpID: null,\n\tappsPartnerID: null,\n\treferralCode: null,\n};\n\n/**\n * Servers to send a request to\n * @name HOSTS\n * @property {string} API\n * @property {string} APPS\n * @property {string} REPORTS\n * @memberof Config\n * @constant\n */\nexport const HOSTS = {\n\tAPI: \"api\",\n\tAPPS: \"apps\",\n\tREPORTS: \"reports\",\n};\n\n/**\n * Servers to send a request to\n * @name ENVIRONMENTS\n * @property {object} UAT\n * @property {object} PROD\n * @memberof Config\n * @constant\n */\nexport const ENVIRONMENTS = {\n\tUAT: {\n\t\t[HOSTS.API]: \"http://api.drivewealth.io/v1\",\n\t\t[HOSTS.APPS]: \"http://apps.drivewealth.io\",\n\t\t[HOSTS.REPORTS]: \"http://reports.drivewealth.io\",\n\t},\n\tPROD: {\n\t\t[HOSTS.API]: \"https://api.drivewealth.net/v1\",\n\t\t[HOSTS.APPS]: \"https://apps.drivewealth.com\",\n\t\t[HOSTS.REPORTS]: \"https://reports.drivewealth.net\",\n\t},\n};\n\nexport function setup({\n\tenv,\n\thttpImpl,\n\tappTypeID,\n\tappVersion,\n\twlpID = \"DW\",\n\tappsPartnerID,\n\treferralCode,\n}) {\n\tConfig.env = env;\n\tConfig.httpImpl = httpImpl;\n\tConfig.appTypeID = appTypeID;\n\tConfig.appVersion = appVersion;\n\tConfig.wlpID = wlpID;\n\tConfig.appsPartnerID = appsPartnerID || wlpID;\n\tConfig.referralCode = referralCode;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.js","import ExtendableError from \"extendable-error-class\";\n\nexport class DriveWealthError extends ExtendableError {\n\tconstructor(message, body, statusCode, headers) {\n\t\tsuper(message);\n\t\tthis.body = body;\n\t\tthis.statusCode = statusCode;\n\t\tthis.headers = headers;\n\t}\n}\n\nexport class DriveWealthSessionError extends ExtendableError {\n\tconstructor(message, body, statusCode, headers) {\n\t\tsuper(message);\n\t\tthis.body = body;\n\t\tthis.statusCode = statusCode;\n\t\tthis.headers = headers;\n\t}\n}\n\nexport default {\n\tDriveWealthError,\n\tDriveWealthSessionError,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Error.js","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ExtendableError).call(this, message));\n\n        _this.name = _this.constructor.name;\n        _this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\nmodule.exports = ExtendableError;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extendable-error-class/dist/index.es5.js\n// module id = 5\n// module chunks = 0","class Sessions {\n    constructor() {\n        this._keys = {};\n        this._mainUser = null;\n    }\n\n    save(userID, sessionKey) {\n        this._keys[userID] = sessionKey;\n        this._mainUser = userID;\n    }\n\n    get(userID) {\n        return this._keys[userID];\n    }\n\n    getAny() {\n        return this._keys[this._mainUser];\n    }\n\n    remove(userID) {\n        delete this._keys[userID];\n    }\n}\n\nexport const sessions = new Sessions();\nexport default sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sessions.js","/* @flow */\nimport request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nimport type { CommissionSchedule } from \"./Account\";\nimport type Instrument from \"./Instrument\";\n\nconst SEC_FEE_RATE = 0.0000231;\nconst SEC_FEE_MIN = 0.01;\nconst SEC_FEE_MAX = Number.POSITIVE_INFINITY;\nconst TAF_FEE_RATE = 0.000119;\nconst TAF_FEE_MIN = 0.01;\nconst TAF_FEE_MAX = 5.95;\n\nexport type OrderParentDetails = {\n\taccountID: string,\n\taccountNo: string,\n\tuserID: string,\n\taccountType: string,\n};\nexport type NewOrder = {\n\tinstrument: Instrument | string,\n\tside: string,\n\tqty?: number,\n\tamountCash?: number,\n\tcomment?: string,\n\tautoStop?: number,\n\tprice?: number,\n};\nexport type NewCartOrder = {\n\tinstrument: Instrument | string,\n\tqty?: number,\n\tamountCash?: number,\n\treferenceID: string,\n\tcomment?: string,\n\tautoStop?: number,\n};\n\n/**\n * @class Order\n * @description An order created for an Account. Use the constructor if you have a flat JSON object that you would like to access instance methods on.\n * @param {object} data - See response at http://developer.drivewealth.com/docs/get_market\n */\nexport default class Order {\n\torderID: string;\n\taccountID: string;\n\tuserID: string;\n\tcumQty: number;\n\taccountNo: string;\n\tcomment: string;\n\tcommission: number;\n\tcreatedByID: string;\n\tcreatedWhen: string;\n\texecutedWhen: string;\n\tgrossTradeAmt: number;\n\tinstrumentID: string;\n\tleavesQty: string;\n\torderNo: string;\n\torderQty: number;\n\tside: string;\n\tautoStop: ?number;\n\tsymbol: string;\n\trejectionReason: ?string;\n\tstatus: string;\n\ttype: number;\n\tprice: ?number;\n\teffectivePrice: ?number;\n\n\tconstructor(data: Object) {\n\t\tObject.assign(this, data);\n\t\tthis.rejectionReason = data.ordRejReason;\n\t\tthis.status = data.ordStatus;\n\t\tthis.type = data.ordType || data.orderType;\n\t\tthis.price = data.stopPrice || data.limitPrice || data.price;\n\t}\n\n\t/**\n\t * @name SIDES\n\t * @memberof Order\n\t * @constant\n\t * @property {string} BUY\n\t * @property {string} SELL\n\t */\n\tstatic SIDES: {[side: string]: string} = {\n\t\tBUY: \"B\",\n\t\tSELL: \"S\",\n\t};\n\n\t/**\n\t * @name TYPES\n\t * @memberof Order\n\t * @constant\n\t * @property {string} MARKET\n\t * @property {string} LIMIT\n\t * @property {string} STOP\n\t */\n\tstatic TYPES: {[type: string]: string} = {\n\t\tMARKET: \"1\",\n\t\tLIMIT: \"2\",\n\t\tSTOP: \"3\",\n\t};\n\n\t/**\n\t * @name STATUSES\n\t * @memberof Order\n\t * @constant\n\t * @property {string} NEW\n\t * @property {string} PARTIAL_FILL\n\t * @property {string} FILL\n\t * @property {string} CANCELED\n\t * @property {string} REJECTED\n\t */\n\tstatic STATUSES: {[status: string]: string} = {\n\t\tNEW: \"0\",\n\t\tPARTIAL_FILL: \"1\",\n\t\tFILL: \"2\",\n\t\tCANCELED: \"4\",\n\t\tREJECTED: \"8\",\n\t};\n\n\t/**\n\t * @instance\n\t */\n\tcancel(): Promise<void> {\n\t\treturn Order.cancel(this.orderID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic cancel(orderID: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/orders/${orderID}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getByID(orderID: string): Promise<Order> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/orders/${orderID}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => new Order(body));\n\t}\n\n\t/**\n\t * @param {string} type\n\t * @param {Object} parentInfo\n\t * @param {Object} options\n\t * @return If waitForFill is true, an Order will be returned. Otherwise, an orderID will be returned.\n\t */\n\tstatic create(\n\t\ttype: string,\n\t\t{\n\t\t\taccountID,\n\t\t\taccountNo,\n\t\t\tuserID,\n\t\t\taccountType,\n\t\t}: OrderParentDetails,\n\t\t{\n\t\t\torder: {\n\t\t\t\tinstrument,\n\t\t\t\tside,\n\t\t\t\tqty,\n\t\t\t\tamountCash,\n\t\t\t\tcomment,\n\t\t\t\tautoStop,\n\t\t\t\tprice,\n\t\t\t},\n\t\t\twaitForFill = true,\n\t\t\tfillRetryInterval = 1000,\n\t\t\tfillMaxRetries = 10,\n\t\t}: {\n\t\t\torder: NewOrder,\n\t\t\twaitForFill?: boolean,\n\t\t\tfillRetryInterval?: number,\n\t\t\tfillMaxRetries?: number,\n\t\t},\n\t): Promise<string | Order> {\n\t\tif (amountCash && qty) {\n\t\t\tthrow new Error(\"\\\"qty\\\" and \\\"amountCash\\\" are mutually exclusive.\");\n\t\t}\n\t\tif (type !== Order.TYPES.MARKET && !price) {\n\t\t\tthrow new Error(\"Limit and stop orders require a \\\"price.\\\"\");\n\t\t}\n\t\tif (type !== Order.TYPES.MARKET && autoStop) {\n\t\t\tthrow new Error(\"\\\"autoStop\\\" is only allowed for market orders.\");\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/orders\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {\n\t\t\t\tinstrumentID: instrument.instrumentID || instrument.id || instrument,\n\t\t\t\taccountID,\n\t\t\t\taccountNo,\n\t\t\t\tuserID,\n\t\t\t\taccountType,\n\t\t\t\tordType: type,\n\t\t\t\tside,\n\t\t\t\torderQty: qty || undefined,\n\t\t\t\tamountCash: amountCash || undefined,\n\t\t\t\tcomment,\n\t\t\t\tautoStop,\n\t\t\t\tprice: type === Order.TYPES.STOP ? price : undefined,\n\t\t\t\tlimitPrice: type === Order.TYPES.LIMIT ? price : undefined,\n\t\t\t},\n\t\t}).then(({ body }) => {\n\t\t\tif (type !== Order.TYPES.MARKET) fillMaxRetries = 1;\n\t\t\tif (!waitForFill) return body.orderID;\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tlet retries = fillMaxRetries;\n\t\t\t\tconst checkStatus = () => {\n\t\t\t\t\tretries -= 1;\n\t\t\t\t\tOrder.getByID(body.orderID).then(order => {\n\t\t\t\t\t\tif (retries <= 0) return resolve(order);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\torder.status !== Order.STATUSES.NEW\n\t\t\t\t\t\t\t&& order.status !== Order.STATUSES.PARTIAL_FILL\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn resolve(order);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t\t\t}, error => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {Object} parentInfo\n\t * @param {Object} options\n\t * @return {Promise<Object.<string, Object>>} An object will be resolved with each key set to a referenceID passed with an order.\n\t */\n\tstatic createCart(\n\t\t{\n\t\t\taccountID,\n\t\t\taccountNo,\n\t\t\tuserID,\n\t\t\taccountType,\n\t\t}: OrderParentDetails,\n\t\t{\n\t\t\torders,\n\t\t\twaitForFill = true,\n\t\t\tfillRetryInterval = 500,\n\t\t\tfillMaxRetries = 10,\n\t\t}: {\n\t\t\torders: Array<NewCartOrder>,\n\t\t\twaitForFill?: boolean,\n\t\t\tfillRetryInterval?: number,\n\t\t\tfillMaxRetries?: number,\n\t\t},\n\t): Promise<{[referenceID: string]: Object}> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/orders\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: orders.map(order => ({\n\t\t\t\tinstrumentID: order.instrument.instrumentID\n\t\t\t\t\t|| order.instrument.id || order.instrument,\n\t\t\t\taccountID,\n\t\t\t\taccountNo,\n\t\t\t\tuserID,\n\t\t\t\taccountType,\n\t\t\t\tordType: Order.TYPES.MARKET,\n\t\t\t\tside: Order.SIDES.BUY,\n\t\t\t\torderQty: order.qty ? order.qty : undefined,\n\t\t\t\tamountCash: order.amountCash ? order.amountCash : undefined,\n\t\t\t\tcomment: order.comment,\n\t\t\t\tautoStop: order.autoStop,\n\t\t\t})),\n\t\t}).then(({ body }) => {\n\t\t\tlet orderResults = body;\n\t\t\tconst ordersMap = orderResults.reduce(\n\t\t\t\t(acc, next, idx) => Object.assign({}, acc, {\n\t\t\t\t\t[orders[idx].referenceID]: next,\n\t\t\t\t}),\n\t\t\t\t{},\n\t\t\t);\n\n\t\t\tif (!waitForFill) return ordersMap;\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tlet retries = fillMaxRetries;\n\t\t\t\torderResults = orderResults.map((order, idx) => Object.assign({}, order, {\n\t\t\t\t\treferenceID: orders[idx].referenceID,\n\t\t\t\t}));\n\t\t\t\tconst checkStatus = () => {\n\t\t\t\t\tif (retries <= 0) return resolve(orderResults);\n\t\t\t\t\tretries -= 1;\n\n\t\t\t\t\tPromise.all(\n\t\t\t\t\t\torderResults.map(order => new Promise((resolve, reject) => {\n\t\t\t\t\t\t\tOrder.getByID(order.orderID, userID, (error, statusDetails) => {\n\t\t\t\t\t\t\t\tif (error) return resolve();\n\t\t\t\t\t\t\t\tordersMap[order.referenceID] = statusDetails;\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})),\n\t\t\t\t\t).then(() => {\n\t\t\t\t\t\tlet shouldRetry = false;\n\t\t\t\t\t\tfor (const reference in ordersMap) {\n\t\t\t\t\t\t\tconst thisStatus = ordersMap[reference].status;\n\t\t\t\t\t\t\tif (!thisStatus\n\t\t\t\t\t\t\t\t|| thisStatus === Order.STATUSES.NEW\n\t\t\t\t\t\t\t\t|| thisStatus === Order.STATUSES.PARTIAL_FILL\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshouldRetry = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (shouldRetry) {\n\t\t\t\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn resolve(ordersMap);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic estimateCommission(\n\t\torders: Array<{\n\t\t\tside: string,\n\t\t\tqty: number,\n\t\t\tmarketPrice: number,\n\t\t\treferenceID: string,\n\t\t}>,\n\t\tcommissionSchedule: CommissionSchedule,\n\t): {\n\t\ttotal: number,\n\t\tmultipleOrderDelta: number,\n\t\tbyOrder: {[referenceID: string]: {\n\t\t\ttotal: number,\n\t\t\tcommission: number,\n\t\t\tfees: {\n\t\t\t\tsec: number,\n\t\t\t\ttaf: number,\n\t\t\t},\n\t\t}}\n\t} {\n\t\torders = Array.isArray(orders) ? orders : [orders];\n\t\tlet total = 0;\n\t\tlet totalFeesOnly = 0;\n\t\tlet basketPrice;\n\n\t\tconst { basketSchedule } = commissionSchedule;\n\t\tif (basketSchedule && basketSchedule.schedule) {\n\t\t\tfor (const scheduleItem of basketSchedule.schedule) {\n\t\t\t\tif (scheduleItem.basketSize === orders.length) {\n\t\t\t\t\tbasketPrice = scheduleItem.basketPrice;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst byOrder = {};\n\t\tfor (const order of orders) {\n\t\t\tconst { qty, marketPrice, side, referenceID } = order;\n\n\t\t\tlet orderPrice = qty < 1\n\t\t\t\t? commissionSchedule.fractionalRate\n\t\t\t\t: commissionSchedule.baseRate;\n\t\t\torderPrice += (\n\t\t\t\t{\n\t\t\t\t\tNEAREST: Math.round,\n\t\t\t\t\tCEIL: Math.ceil,\n\t\t\t\t\tFLOOR: Math.floor,\n\t\t\t\t}[commissionSchedule.shareAmountRounding](\n\t\t\t\t\tMath.max(0, qty - commissionSchedule.baseShares),\n\t\t\t\t) * commissionSchedule.excessRate\n\t\t\t);\n\n\t\t\tlet secFee = 0;\n\t\t\tlet tafFee = 0;\n\t\t\tif (commissionSchedule.passThroughFees && side === Order.SIDES.SELL) {\n\t\t\t\ttafFee = qty * marketPrice * TAF_FEE_RATE;\n\t\t\t\ttafFee = Math.min(TAF_FEE_MAX, tafFee);\n\t\t\t\ttafFee = Math.max(TAF_FEE_MIN, tafFee);\n\n\t\t\t\tif (qty >= 1) {\n\t\t\t\t\tsecFee = Math.floor(qty) * marketPrice * SEC_FEE_RATE;\n\t\t\t\t\tsecFee = Math.min(SEC_FEE_MAX, secFee);\n\t\t\t\t\tsecFee = Math.max(SEC_FEE_MIN, secFee);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst orderTotal = orderPrice + secFee + tafFee;\n\t\t\ttotal += orderTotal;\n\t\t\ttotalFeesOnly += secFee + tafFee;\n\n\t\t\tbyOrder[referenceID] = {\n\t\t\t\ttotal: orderTotal,\n\t\t\t\tcommission: orderPrice,\n\t\t\t\tfees: {\n\t\t\t\t\tsec: secFee,\n\t\t\t\t\ttaf: tafFee,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttotal: basketPrice ? (basketPrice + totalFeesOnly) : total,\n\t\t\tmultipleOrderDelta: basketPrice ? (basketPrice - total) : 0,\n\t\t\tbyOrder,\n\t\t};\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Order.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport { Config, HOSTS } from \"./Config\";\n\n/**\n * @class Funding\n * @description Static class for retrieving funding information.\n */\nexport default class Funding {\n\t/**\n\t * @name ALLOWED_TYPES\n\t * @memberof Funding\n\t * @constant\n\t * @property {string} DEPOSIT\n\t * @property {string} WITHDRAW\n\t * @property {string} DEPOSIT_AND_WITHDRAW\n\t */\n\tstatic ALLOWED_TYPES = {\n\t\tDEPOSIT: \"DEPOSIT\",\n\t\tWITHDRAW: \"WITHDRAW\",\n\t\tDEPOSIT_AND_WITHDRAW: \"DEPOSIT_AND_WITHDRAW\",\n\t};\n\n\t/**\n\t * @param {object} options\n\t */\n\tstatic getFundingMethods({\n\t\tuserID,\n\t\taccountID,\n\t\tlanguage,\n\t\tminAmount,\n\t\tmaxAmount,\n\t\tamount,\n\t\tfilters = {},\n\t}: {\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tlanguage?: string,\n\t\tminAmount?: number,\n\t\tmaxAmount?: number,\n\t\tamount?: number,\n\t\tfilters?: {\n\t\t\tname: string,\n\t\t\tcurrency: string,\n\t\t\tcountry: string,\n\t\t\tallowed: string,\n\t\t},\n\t} = {}): Promise<Array<Object>> {\n\t\tif (amount && (minAmount || maxAmount)) {\n\t\t\tthrow new Error(`\"amount\" is not compatible with \"minAmount\" or \"maxAmount.\"`);\n\t\t}\n\n\t\tlet queryString = `partner=${Config.appsPartnerID}&userID=${userID}&accountID=${accountID}`;\n\t\tif (language) queryString += `&language=${language}`;\n\t\tif (minAmount) queryString += `&minAmount=${minAmount}`;\n\t\tif (maxAmount) queryString += `&maxAmount=${maxAmount}`;\n\t\tif (amount) queryString += `&amount=${amount}`;\n\t\tif (filters.name) queryString += `&filter[name]=${filters.name}`;\n\t\tif (filters.country) queryString += `&filter[country]=${filters.country}`;\n\t\tif (filters.currency) queryString += `&filter[currency]=${filters.currency}`;\n\t\tif (filters.allowed) queryString += `&filter[allowed]=${filters.allowed}`;\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\thost: HOSTS.APPS,\n\t\t\tendpoint: `/funding/methods?${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getPastDeposits(userID: string) {\n\t\treturn request({\n\t\t\tendpoint: \"/funding/status\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.data);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getSubscriptionPlans(userID: string) {\n\t\treturn request({\n\t\t\tendpoint: \"/funding/ach/subscription-plans\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => {\n\t\t\tconst pricing = body.data.map((pricing) =>\n\t\t\t\t[].concat(pricing)\n\t\t\t\t\t.sort((x, y) => x.amount - y.amount)\n\t\t\t\t\t.map(price => Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\tprice,\n\t\t\t\t\t\t{ amount: Number(price.amount / 100) },\n\t\t\t\t\t)),\n\t\t\t)[0];\n\n\t\t\treturn pricing;\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Funding.js","/* @flow */\nimport request from \"./request\";\nimport { Config, HOSTS } from \"./Config\";\nimport Sessions from \"./Sessions\";\n\n/**\n * @class Reports\n * @description Static class for retrieving account reports.\n */\nexport default class Reports {\n\t/**\n\t * @static\n\t */\n\tstatic getTransactions(\n\t\tuserID: string,\n\t\taccountNo: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?sessionKey=${Sessions.get(userID)}`\n\t\t\t+ \"&ReportName=FinTrans\"\n\t\t\t+ \"&ReportFormat=JSON\"\n\t\t\t+ `&AccountNumber=${accountNo}`\n\t\t\t+ `&DateStart=${startDate.toISOString()}`\n\t\t\t+ `&DateEnd=${endDate.toISOString()}`\n\t\t\t+ `&wlpID=${Config.wlpID}`\n\t\t\t+ \"&LanguageID=en_US\";\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\thost: HOSTS.REPORTS,\n\t\t\tendpoint: `/DriveWealth${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {},\n\t\t}).then(({ body }) => body.transaction || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getPlacedOrders(\n\t\tuserID: string,\n\t\taccountNo: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?sessionKey=${Sessions.get(userID)}`\n\t\t\t+ \"&ReportName=OrderTrans\"\n\t\t\t+ \"&ReportFormat=JSON\"\n\t\t\t+ `&AccountNumber=${accountNo}`\n\t\t\t+ `&DateStart=${startDate.toISOString()}`\n\t\t\t+ `&DateEnd=${endDate.toISOString()}`\n\t\t\t+ `&wlpID=${Config.wlpID}`\n\t\t\t+ \"&LanguageID=en_US\";\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\thost: HOSTS.REPORTS,\n\t\t\tendpoint: `/DriveWealth${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {},\n\t\t}).then(({ body }) => body.transaction || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getStatements(\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?accountID=${accountID}`\n\t\t\t+ `&dateStart=${startDate.toISOString()}`\n\t\t\t+ `&dateEnd=${endDate.toISOString()}`\n\t\t\t+ \"&type=02\";\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/statements${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getTradeConfirms(\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?accountID=${accountID}`\n\t\t\t+ `&dateStart=${startDate.toISOString()}`\n\t\t\t+ `&dateEnd=${endDate.toISOString()}`\n\t\t\t+ \"&type=01\";\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/statements${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getTaxDocuments(\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t): Promise<Array<Object>> {\n\t\tconst queryString =\n\t\t\t`?accountID=${accountID}`\n\t\t\t+ `&dateStart=${startDate.toISOString()}`\n\t\t\t+ `&dateEnd=${endDate.toISOString()}`\n\t\t\t+ \"&type=03\";\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/statements${queryString}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body || []);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic generateDownloadURL(\n\t\tuserID: string,\n\t\taccountID: string,\n\t\tfileKey: string,\n\t): Promise<string> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/statements/${accountID}/${fileKey}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.url);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getSupportedCountries() {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: \"/countries\",\n\t\t}).then(({ body }) => body || []);\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Reports.js","/* @flow */\nimport request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport type Quote = {\n\tbid: number,\n\task: number,\n};\n\n/**\n * @class Instrument\n * @description Use the constructor if you have a flat JSON object that you would like to access instance methods on.\n * @param {object} data - See response at http://developer.drivewealth.com/docs/get_instrument\n */\nexport default class Instrument {\n\tinstrumentID: string;\n\tname: string;\n\texchangeID: string;\n\tinstrumentTypeID: string;\n\torderSizeMax: number;\n\torderSizeMin: number;\n\torderSizeStep: number;\n\trateAsk: number;\n\trateBid: number;\n\tratePrecision: number;\n\tsymbol: string;\n\ttradeStatus: string;\n\turlImage: string;\n\turlInvestor: string;\n\tchaikinPgr: string;\n\tpriorClose: number;\n\tmarketState: number;\n\tfundamentalDataModel: Object;\n\n\tconstructor(data: Object) {\n\t\tObject.assign(this, data);\n\t}\n\n\t/**\n\t * @name TRADE_STATUSES\n\t * @memberof Instrument\n\t * @constant\n\t * @property {string} INACTIVE\n\t * @property {string} ACTIVE\n\t * @property {string} CLOSED\n\t */\n\tstatic TRADE_STATUSES: {[status: string]: string} = {\n\t\tINACTIVE: \"0\",\n\t\tACTIVE: \"1\",\n\t\tCLOSED: \"2\",\n\t};\n\n\t/**\n\t * @name CHART_COMPRESSIONS\n\t * @memberof Instrument\n\t * @constant\n\t * @property {number} DAY\n\t * @property {number} MINUTE_1\n\t * @property {number} MINUTE_5\n\t * @property {number} MINUTE_30\n\t * @property {number} HOUR\n\t * @property {number} WEEK\n\t */\n\tstatic CHART_COMPRESSIONS: {[status: string]: number} = {\n\t\tDAY: 0,\n\t\tMINUTE_1: 1,\n\t\tMINUTE_5: 4,\n\t\tMINUTE_30: 8,\n\t\tHOUR: 9,\n\t\tWEEK: 10,\n\t};\n\n\t/**\n\t * @static\n\t */\n\tstatic getBySymbol(symbol: Array<string> | string): Promise<Array<Instrument> | Instrument> {\n\t\tconst symbols = typeof symbol === \"string\" ? [symbol] : symbol;\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/instruments?symbols=${symbols.join(\",\")}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => {\n\t\t\tbody = body.map(instrument => new Instrument(instrument));\n\t\t\treturn typeof symbol === \"string\" ? body[0] : body;\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getByID(id: string, includeFundamentals: boolean = true): Promise<Instrument> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/instruments/${id}${includeFundamentals ? \"?options=F\" : \"\"}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => new Instrument(body));\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getAll(tradeStatus?: string = \"-1\"): Promise<Array<Instrument>> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/instruments?tradeStatus=${tradeStatus}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => body.map(instrument => new Instrument(instrument)));\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic search(criteria: { name?: string, symbol?: string }): Promise<Array<Instrument>> {\n\t\tlet queryString = \"?\";\n\t\tif (criteria.symbol) queryString += `symbol=${criteria.symbol}&`;\n\t\tif (criteria.name) queryString += `name=${criteria.name}&`;\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/instruments${queryString}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => body.map(instrument => new Instrument(instrument)));\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tgetQuote(): Promise<Quote> {\n\t\treturn Instrument.getQuote(this.symbol);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getQuote(symbol: string | Instrument | Array<string> | Array<Instrument>): Promise<Quote | {[symbol: string]: Quote}> {\n\t\tconst symbols: Array<string> = (Array.isArray(symbol) ? symbol : [symbol])\n\t\t\t.map(sym => sym instanceof Instrument ? sym.symbol : sym);\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/quotes?symbols=${symbols.join(\",\")}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t\taddlHeaders: {\n\t\t\t\tAccept: \"text/plain\",\n\t\t\t},\n\t\t}).then(({ body }) => {\n\t\t\tlet obj = {};\n\t\t\tbody = body.split(\"|\").slice(10);\n\t\t\tfor (const rawQuote of body) {\n\t\t\t\tconst parsedQuote = rawQuote.split(\",\");\n\t\t\t\tobj[parsedQuote[0]] = {\n\t\t\t\t\tbid: Number(parsedQuote[1]),\n\t\t\t\t\task: Number(parsedQuote[2]),\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (!Array.isArray(symbol)) obj = obj[symbols[0]];\n\t\t\treturn obj;\n\t\t});\n\t}\n\n\t/**\n\t * @param {date} dateStart\n\t * @param {date} dateEnd\n\t */\n\t/**\n\t * @param {number} tradingDays\n\t */\n\tgetChartData(compression: number) {\n\t\tif (arguments.length === 3) {\n\t\t\treturn Instrument.getChartData(this.instrumentID, compression, arguments[1], arguments[2]);\n\t\t} else {\n\t\t\treturn Instrument.getChartData(this.instrumentID, compression, arguments[1]);\n\t\t}\n\t}\n\n\t/**\n\t * @param {date} dateStart\n\t * @param {date} dateEnd\n\t */\n\t/**\n\t * @param {number} tradingDays\n\t */\n\tstatic getChartData(instrumentID: string, compression: number): Promise<Array<string>> {\n\t\tlet timeParams;\n\t\tif (arguments.length === 4) {\n\t\t\tconst dateStart = arguments[2].toISOString().replace(/\\.\\d{3}/, \"\");\n\t\t\tconst dateEnd = arguments[3].toISOString().replace(/\\.\\d{3}/, \"\");\n\t\t\ttimeParams = `dateStart=${dateStart}&dateEnd=${dateEnd}`;\n\t\t} else {\n\t\t\ttimeParams = `tradingDays=${arguments[2]}`;\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/bars?instrumentID=${instrumentID}&compression=${compression}&${timeParams}`,\n\t\t\tsessionKey: Sessions.getAny(),\n\t\t}).then(({ body }) => body.data.split(\"|\"));\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js","/* @flow */\nimport request from \"./request\";\nimport { Config } from \"./Config\";\nimport Sessions from \"./Sessions\";\nimport Account from \"./Account\";\n\n/**\n * @class User\n * @description A user object. Use the constructor if you have a flat JSON object that you would like to access instance methods on.\n * @param {object} data - See response at {@link http://developer.drivewealth.com/docs/get-user}\n */\nclass User {\n\tcountryID: string;\n\temailAddress: string;\n\tfirstName: string;\n\tlanguageID: string;\n\tlastName: string;\n\tphoneNumber: string;\n\treferralCode: string;\n\tuserID: string;\n\tusername: string;\n\twlpID: string;\n\tstatus: string;\n\tusCitizen: boolean;\n\tlastLoginWhen: string;\n\tcitizenship: string;\n\taddressLine1: string;\n\taddressLine2: string;\n\tcity: string;\n\tstateProvince: string;\n\tzipPostalCode: string;\n\tfullName: string;\n\n\tconstructor(data: Object) {\n\t\tObject.assign(this, data);\n\t\tthis.fullName = data.firstName + \" \" + data.lastName;\n\t}\n\n\t/**\n\t * @name STATUSES\n\t * @property {Number} PENDING\n\t * @property {Number} APPROVED\n\t * @property {Number} REJECTED\n\t * @property {Number} REVOKED\n\t * @property {Number} CLOSED\n\t * @memberof User\n\t * @constant\n\t */\n\tstatic STATUSES: {[status: string]: number} = {\n\t\tPENDING: 1,\n\t\tAPPROVED: 2,\n\t\tREJECTED: 3,\n\t\tREVOKED: 4,\n\t\tCLOSED: 5,\n\t};\n\n\t/**\n\t * @name DOCUMENT_TYPES\n\t * @property {string} PHOTO_ID\n\t * @property {string} PROOF_OF_ADDRESS\n\t * @property {string} PHOTO_ID_WITH_PROOF_OF_ADDRESS\n\t * @memberof User\n\t * @constant\n\t */\n\tstatic DOCUMENT_TYPES: {[type: string]: string} = {\n\t\tPHOTO_ID: \"Picture ID\",\n\t\tPROOF_OF_ADDRESS: \"Proof of address\",\n\t\tPHOTO_ID_WITH_PROOF_OF_ADDRESS: \"Picture ID_Proof of address\",\n\t};\n\n\t/**\n\t * @instance\n\t */\n\tgetAccounts(): Promise<Array<Account>> {\n\t\treturn Account.getListForUserID(this.userID);\n\t}\n\n\t/**\n\t * Get all settings\n\t * @param  {string} userID\n\t * @return {Promise<Object.<string, string>>}\n\t */\n\t/**\n\t * Get setting value\n\t * @param  {string} userID\n\t * @param  {string} key\n\t * @return {Promise<string>}\n\t */\n\tstatic getSettings(userID: string) {\n\t\tconst key = arguments[1];\n\t\tif (!key) {\n\t\t\treturn request({\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tendpoint: `/users/${userID}/settings`,\n\t\t\t\tsessionKey: Sessions.get(userID),\n\t\t\t}).then(({ body }) => {\n\t\t\t\tconst formattedData = {};\n\t\t\t\tfor (const setting of body) {\n\t\t\t\t\tformattedData[setting.key] = setting.value;\n\t\t\t\t}\n\t\t\t\treturn formattedData;\n\t\t\t});\n\t\t}\n\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/settings/${key}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => body.value);\n\t}\n\n\t/**\n\t * Get all settings\n\t * @return {Promise<Object.<string, string>>}\n\t */\n\t/**\n\t * Get setting value\n\t * @param  {string} key\n\t * @return {Promise<string>}\n\t */\n\tgetSettings() {\n\t\tconst [key] = arguments;\n\t\treturn User.getSettings(this.userID, key);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic setSetting(userID: string, key: string, value: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: `/users/${userID}/settings`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {\n\t\t\t\tkey, value,\n\t\t\t},\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tsetSetting(key: string, value: string): Promise<void> {\n\t\treturn User.setSetting(this.userID, key, value);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tunsetSetting(key: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/users/${this.userID}/settings/${key}`,\n\t\t\tsessionKey: Sessions.get(this.userID),\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @description See response at {@link http://developer.drivewealth.com/docs/user-status}\n\t */\n\tgetStatus(): Promise<Object> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${this.userID}/status`,\n\t\t\tsessionKey: Sessions.get(this.userID),\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tlogout(): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/userSessions/${Sessions.get(this.userID)}`,\n\t\t\tsessionKey: Sessions.get(this.userID),\n\t\t}).then(() => {\n\t\t\tSessions.remove(this.userID);\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getByUserID(userID: string): Promise<User> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}).then(({ body }) => new User(body));\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic login(username: string, password: string): Promise<User> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/userSessions\",\n\t\t\tbody: {\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\tappTypeID: Config.appTypeID,\n\t\t\t\tappVersion: Config.appVersion,\n\t\t\t\tlanguageID: \"en_US\",\n\t\t\t\tosType: \"unknown\",\n\t\t\t\tosVersion: \"unknown\",\n\t\t\t\tscrRes: \"unknown\",\n\t\t\t\tipAddress: \"unknown\",\n\t\t\t},\n\t\t}).then(({ body }) => {\n\t\t\tSessions.save(body.userID, body.sessionKey);\n\t\t\treturn User.getByUserID(body.userID);\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic isUsernameAvailable(username: string): Promise<boolean> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users?username=${username}`,\n\t\t}).then(\n\t\t\t() => false,\n\t\t\t(rejection) => rejection.statusCode === 404\n\t\t\t\t? true\n\t\t\t\t: Promise.reject(rejection),\n\t\t);\n\t}\n\n\t/**\n\t * @param {object} data\n\t * @param {boolean} loginAutomatically - If false, no session will be created.\n\t * @return {Promise<undefined | User>} If loginAutomatically is true, a User will be resolved.\n\t */\n\tstatic create({\n\t\tusername,\n\t\tpassword,\n\t\tfirstName,\n\t\tlastName,\n\t\temail,\n\t\tlanguageID,\n\t\treferralCode = Config.referralCode,\n\t\tutmCampaign,\n\t\tutmContent,\n\t\tutmMedium,\n\t\tutmSource,\n\t\tutmTerm,\n\t}, loginAutomatically: boolean = true): Promise<void | User> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/signups/live\",\n\t\t\tbody: {\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\temailAddress1: email,\n\t\t\t\tlanguageID,\n\t\t\t\twlpID: Config.wlpID,\n\t\t\t\treferralCode,\n\t\t\t\tutmCampaign,\n\t\t\t\tutmContent,\n\t\t\t\tutmMedium,\n\t\t\t\tutmSource,\n\t\t\t\tutmTerm,\n\t\t\t},\n\t\t}).then(() => {\n\t\t\tif (loginAutomatically) {\n\t\t\t\treturn User.login(username, password);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @param {object} data\n\t */\n\tstatic update({\n\t\tuserID,\n\t\taddressLine1,\n\t\taddressLine2,\n\t\tcity,\n\t\tcountryID,\n\t\temail,\n\t\tfirstName,\n\t\tlastName,\n\t\tlanguageID,\n\t\tphoneHome,\n\t\tphoneWork,\n\t\tphone,\n\t\tstateProvince,\n\t\tzipPostalCode,\n\t}) {\n\t\treturn request({\n\t\t\tmethod: \"PUT\",\n\t\t\tendpoint: `/users/${userID}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {\n\t\t\t\taddressLine1,\n\t\t\t\taddressLine2,\n\t\t\t\tcity,\n\t\t\t\tcountryID,\n\t\t\t\temailAddress1: email,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\tlanguageID,\n\t\t\t\tphoneHome,\n\t\t\t\tphoneWork,\n\t\t\t\tphoneMobile: phone,\n\t\t\t\tstateProvince,\n\t\t\t\tzipPostalCode,\n\t\t\t},\n\t\t}).then(({ body }) => body);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tuploadDocument(file: File, type: string): Promise<void> {\n\t\treturn User.uploadDocument(this.userID, file, type);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic uploadDocument(userID: string, file: File, type: string): Promise<void> {\n\t\t// The following line is for eslint\n\t\t/* global FormData */\n\t\tconst body = new FormData();\n\t\tbody.append(\"token\", userID);\n\t\tbody.append(\"documentType\", type);\n\t\tbody.append(\"documentImage\", file);\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/documents\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\taddlHeaders: {\n\t\t\t\t\"Content-Type\": \"multipart/form-data\",\n\t\t\t},\n\t\t\tbody,\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tlistCreditCards(): Promise<Array<Object>> {\n\t\treturn _listCreditCards(this.userID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic listCreditCards(userID: string): Promise<Array<Object>> {\n\t\treturn _listCreditCards(userID);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\taddCreditCard(cardToken: string): Promise<Object> {\n\t\treturn _addCreditCard(this.userID, cardToken);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic addCreditCard(userID: string, cardToken: string): Promise<Object> {\n\t\treturn _addCreditCard(userID, cardToken);\n\t}\n\n\t/**\n\t * @instance\n\t */\n\tremoveCreditCard(cardID: string): Promise<void> {\n\t\t return _removeCreditCard(this.userID, cardID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic removeCreditCard(userID: string, cardID: string): Promise<void> {\n\t\treturn _removeCreditCard(userID, cardID);\n\t}\n}\n\nfunction _listCreditCards(userID: string) {\n\treturn request({\n\t\tmethod: \"GET\",\n\t\tendpoint: `/users/${userID}/credit-cards`,\n\t\tsessionKey: Sessions.get(userID),\n\t}).then(({ body }) => body);\n}\n\nfunction _addCreditCard(userID: string, cardToken: string) {\n\treturn request({\n\t\tmethod: \"POST\",\n\t\tendpoint: `/users/${userID}/credit-cards`,\n\t\tsessionKey: Sessions.get(userID),\n\t\tbody: { cardToken },\n\t}).then(({ body }) => body);\n}\n\nfunction _removeCreditCard(userID: string, cardID: string) {\n\treturn request({\n\t\tmethod: \"DELETE\",\n\t\tendpoint: `/users/${userID}/credit-cards/${cardID}`,\n\t\tsessionKey: Sessions.get(userID),\n\t}).then(() => undefined);\n}\n\nfunction _getSettings(userID: string, key: string) {\n\treturn request({\n\t\tmethod: \"GET\",\n\t\tendpoint: `/users/${userID}/settings/${key}`,\n\t\tsessionKey: Sessions.get(userID),\n\t}).then(({ body }) => body);\n}\n\nfunction _getAllSettings(userID: string) {\n\treturn request({\n\t\tmethod: \"GET\",\n\t\tendpoint: `/users/${userID}/settings`,\n\t\tsessionKey: Sessions.get(userID),\n\t}).then(data => {\n\t\tlet formattedData = {};\n\t\tfor (let setting of data) {\n\t\t\tformattedData[setting.key] = setting.value;\n\t\t}\n\t\treturn formattedData;\n\t});\n}\n\nfunction _setSetting(userID: string, key: string, value: string) {\n\treturn request({\n\t\tmethod: \"POST\",\n\t\tendpoint: `/users/${userID}/settings`,\n\t\tsessionKey: Sessions.get(userID),\n\t\tbody: {\n\t\t\tkey, value,\n\t\t},\n\t}).then(() => undefined);\n}\n\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./src/User.js"]}