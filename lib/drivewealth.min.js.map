{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap b6d0fd3453d516fd8e68","webpack:///src/index.js","webpack:///src/Account.js","webpack:///src/request.js","webpack:///src/Config.js","webpack:///src/Sessions.js","webpack:///src/User.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","_Account","_User","_Config","ENVIRONMENTS","Account","User","setup","_request","_Sessions","data","_classCallCheck","_arr","_i","length","key","userID","cb","_request2","default","method","endpoint","sessionKey","_Sessions2","get","map","account","err","request","_ref","onSuccess","onError","_ref$method","undefined","body","_ref$addlHeaders","addlHeaders","headers","Accept","header","Config","env","JSON","stringify","httpImpl","statusCode","resHeaders","resBody","parse","String","appTypeID","appVersion","UAT","PROD","Sessions","_keys","sessions","_Account2","getListForUserID","username","password","languageID","osType","osVersion","scrRes","ipAddress","save","getByUserID","user"],"mappings":";;;;;;;;;CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,SAAAA,OAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,YAAAD,IAEAD,EAAA,YAAAC,MACCK,KAAA,WACD,mBCNA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAN,OAGA,IAAAC,GAAAM,EAAAD,IACAN,WACAQ,GAAAF,EACAG,QAAA,EAUA,OANAC,GAAAJ,GAAAK,KAAAV,EAAAD,QAAAC,EAAAA,EAAAD,QAAAK,GAGAJ,EAAAQ,QAAA,EAGAR,EAAAD,QAvBA,GAAAO,KAqCA,OATAF,GAAAO,EAAAF,EAGAL,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,GAGAT,EAAA,qICtCA,IAAAU,GAAAV,EAAA,UACAW,EAAAX,EAAA,UACAY,EAAAZ,EAAA,cAGIa,aAAAA,EAAAA,aAEAC,QAAAA,EAAAA,QACAC,KAAAA,EAAAA,QAEAC,MAAAA,EAAAA,ofCVJC,EAAAjB,EAAA,UACAkB,EAAAlB,EAAA,UAEqBc,aAEjB,QAAAA,GAAYK,GAAMC,EAAArB,KAAAe,EACd,KAAA,GADcO,IAEV,YACA,YACA,cACA,aACA,OACA,SACA,WACA,aACA,mBACA,SACA,eAXJC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAYG,CAZE,GAAIE,GAAAA,EAAAA,EAaLzB,MAAKyB,GAAOL,EAAKK,4DAIDC,EAAQC,IAC5B,EAAAC,EAAAC,UACIC,OAAQ,MACRC,SAAAA,UAAoBL,EAApB,YACAM,WAAYC,EAAAJ,QAASK,IAAIR,IAC1B,SAACN,GACAO,GAAMA,EAAG,KAAMP,EAAKe,IAAI,SAAAC,GAAA,MAAW,IAAIrB,GAAQqB,OAChD,SAAAC,GAAA,MAAOV,IAAMA,EAAGU,wBA3BNtB,mDCDN,SAASuB,GAATC,EAMZC,EAAWC,GAAS,GAAAC,GAAAH,EALnBT,OAAAA,EAKmBa,SAAAD,EALV,MAKUA,EAJnBX,EAImBQ,EAJnBR,SACAC,EAGmBO,EAHnBP,WACAY,EAEmBL,EAFnBK,KAEmBC,EAAAN,EADnBO,YAAAA,EACmBH,SAAAE,KAAAA,EACfE,GACAC,OAAQ,mBAEG,UAAXlB,GAAgC,QAAXA,GAA+B,UAAXA,IACzCiB,EAAQ,gBAAkB,oBAE1Bf,IACAe,EAAQ,2BAA6Bf,EAEzC,KAAK,GAAIiB,KAAUH,GACfC,EAAQE,GAAUH,EAAYG,EAGlClB,GAAWlB,EAAAqC,OAAOC,IAAMpB,EAEQ,qBAA5BgB,EAAQ,kBAAwCH,EAAOQ,KAAKC,UAAUT,IAE1E/B,EAAAqC,OAAOI,SAASxB,EAAQC,EAAUgB,EAASH,EAAM,SAACW,EAAYC,EAAYC,GACjC,qBAA/BD,EAAW,iBAAyE,qBAA/BA,EAAW,kBAC/DC,IACHA,EAAUL,KAAKM,MAAMD,IAGK,MAA1BE,OAAOJ,GAAY,IAAwC,MAA1BI,OAAOJ,GAAY,GACpDf,EAAUiB,EAASD,GAEnBf,EAAQgB,EAASD,gEAjCLlB,CAFxB,IAAAzB,GAAAZ,EAAA,kDCYO,SAASgB,GAATsB,GAKJ,GAJCY,GAIDZ,EAJCY,IACAG,EAGDf,EAHCe,SACAM,EAEDrB,EAFCqB,UACAC,EACDtB,EADCsB,UAEAX,GAAOC,IAAMA,EACbD,EAAOI,SAAWA,EAClBJ,EAAOU,UAAYA,EACnBV,EAAOW,WAAaA,qDATR5C,MAAAA,CAZT,IAAMiC,GAAAA,EAAAA,QACTC,IAAK,KACLG,SAAU,KACVM,UAAW,KACXC,WAAY,KAGH/C,GAAAA,cACTgD,IAAK,+BACLC,KAAM,scCTJC,aACF,QAAAA,KAAc3C,EAAArB,KAAAgE,GACVhE,KAAKiE,gDAGJvC,EAAQM,GACThC,KAAKiE,MAAMvC,GAAUM,8BAGrBN,GACA,MAAO1B,MAAKiE,MAAMvC,YAIbwC,EAAAA,EAAAA,SAAW,GAAIF,aACbE,2dCffhD,EAAAjB,EAAA,UACAY,EAAAZ,EAAA,GACAkB,EAAAlB,EAAA,UACAU,EAAAV,EAAA,UAEqBe,aAEjB,QAAAA,GAAYI,GAAMC,EAAArB,KAAAgB,EACd,KAAA,GADcM,IAEV,YACA,eACA,YACA,aACA,WACA,cACA,eACA,SACA,WACA,QACA,SACA,YACA,gBACA,eAdJC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IAeG,CAfE,GAAIE,GAAAA,EAAAA,EAgBLzB,MAAKyB,GAAOL,EAAKK,kDAIbE,GACRwC,EAAAtC,QAAQuC,iBAAiBpE,KAAK0B,OAAQC,yCAGvBD,EAAQC,IACvB,EAAAC,EAAAC,UACIC,OAAQ,MACRC,SAAAA,UAAoBL,EACpBM,WAAYC,EAAAJ,QAASK,IAAIR,IAC1B,SAACN,GACAO,GAAMA,EAAG,KAAM,GAAIX,GAAKI,KACzB,SAAAiB,GAAA,MAAOV,IAAMA,EAAGU,mCAGVgC,EAAUC,EAAU3C,IAC7B,EAAAC,EAAAC,UACIC,OAAQ,OACRC,SAAU,gBACVa,MACIyB,SAAAA,EACAC,SAAAA,EACAV,UAAW/C,EAAAqC,OAAOU,UAClBC,WAAYhD,EAAAqC,OAAOW,WACnBU,WAAY,QACZC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,UAAW,YAEhB,SAACvD,GACAa,EAAAJ,QAAS+C,KAAKxD,EAAKM,OAAQN,EAAKY,YAChChB,EAAK6D,YAAYzD,EAAKM,OAAQ,SAACW,EAAKyC,GAChC,MAAIzC,GAAYV,GAAMA,EAAGU,QACzBV,GAAMA,EAAG,KAAMmD,OAEpB,SAAAzC,GAAA,MAAOV,IAAMA,EAAGU,wBA1DNrB","file":"drivewealth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drivewealth\"] = factory();\n\telse\n\t\troot[\"drivewealth\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b6d0fd3453d516fd8e68","import Account from \"./Account\";\nimport User from \"./User\";\nimport { setup, ENVIRONMENTS } from \"./Config\";\n\nexport default {\n    ENVIRONMENTS,\n\n    Account,\n    User,\n\n    setup\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport default class Account {\n\n    constructor(data) {\n        for (let key of [\n            \"accountID\",\n            \"accountNo\",\n            \"accountType\",\n            \"currencyID\",\n            \"ibID\",\n            \"margin\",\n            \"nickname\",\n            \"openedWhen\",\n            \"patternDayTrades\",\n            \"status\",\n            \"tradingType\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    static getListForUserID(userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${userID}/accounts`,\n            sessionKey: Sessions.get(userID)\n        }, (data) => {\n            cb && cb(null, data.map(account => new Account(account)));\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Account.js","import { Config } from \"./Config\";\n\nexport default function request({\n    method = \"GET\",\n    endpoint,\n    sessionKey,\n    body,\n    addlHeaders = {},\n}, onSuccess, onError) {\n    let headers = {\n        Accept: \"application/json\"\n    };\n    if (method === \"POST\" || method === \"PUT\" || method === \"PATCH\") {\n        headers[\"Content-Type\"] = \"application/json\";\n    }\n    if (sessionKey) {\n        headers[\"x-mysolomeo-session-key\"] = sessionKey;\n    }\n    for (let header in addlHeaders) {\n        headers[header] = addlHeaders[header];\n    }\n\n    endpoint = Config.env + endpoint;\n\n    if (headers[\"Content-Type\"] === \"application/json\") body = JSON.stringify(body);\n\n    Config.httpImpl(method, endpoint, headers, body, (statusCode, resHeaders, resBody) => {\n        if ( (resHeaders[\"Content-Type\"] === \"application/json\" || resHeaders[\"content-type\"] === \"application/json\")\n            && resBody) {\n            resBody = JSON.parse(resBody);\n        }\n\n        if (String(statusCode)[0] === \"2\" || String(statusCode)[0] === \"3\") {\n            onSuccess(resBody, resHeaders);\n        } else {\n            onError(resBody, resHeaders);\n        }\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","export const Config = {\n    env: null,\n    httpImpl: null,\n    appTypeID: null,\n    appVersion: null,\n};\n\nexport const ENVIRONMENTS = {\n    UAT: \"http://api.drivewealth.io/v1\",\n    PROD: \"https://api.drivewealth.net/v1\",\n};\n\nexport function setup({\n    env,\n    httpImpl,\n    appTypeID,\n    appVersion,\n}) {\n    Config.env = env;\n    Config.httpImpl = httpImpl;\n    Config.appTypeID = appTypeID;\n    Config.appVersion = appVersion;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.js","class Sessions {\n    constructor() {\n        this._keys = {};\n    }\n\n    save(userID, sessionKey) {\n        this._keys[userID] = sessionKey;\n    }\n\n    get(userID) {\n        return this._keys[userID];\n    }\n}\n\nexport const sessions = new Sessions();\nexport default sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sessions.js","import request from \"./request\";\nimport { Config } from \"./Config\";\nimport Sessions from \"./Sessions\";\nimport Account from \"./Account\";\n\nexport default class User {\n\n    constructor(data) {\n        for (let key of [\n            \"countryID\",\n            \"emailAddress\",\n            \"firstName\",\n            \"languageID\",\n            \"lastName\",\n            \"phoneNumber\",\n            \"referralCode\",\n            \"userID\",\n            \"username\",\n            \"wlpID\",\n            \"status\",\n            \"usCitizen\",\n            \"lastLoginWhen\",\n            \"citizenship\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    getAccounts(cb) {\n        Account.getListForUserID(this.userID, cb);\n    }\n\n    static getByUserID(userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${userID}`,\n            sessionKey: Sessions.get(userID)\n        }, (data) => {\n            cb && cb(null, new User(data));\n        }, err => cb && cb(err));\n    }\n\n    static login(username, password, cb) {\n        request({\n            method: \"POST\",\n            endpoint: \"/userSessions\",\n            body: {\n                username,\n                password,\n                appTypeID: Config.appTypeID,\n                appVersion: Config.appVersion,\n                languageID: \"en_US\",\n                osType: \"unknown\",\n                osVersion: \"unknown\",\n                scrRes: \"unknown\",\n                ipAddress: \"unknown\"\n            }\n        }, (data) => {\n            Sessions.save(data.userID, data.sessionKey);\n            User.getByUserID(data.userID, (err, user) => {\n                if (err) return cb && cb(err);\n                cb && cb(null, user);\n            });\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/User.js"]}