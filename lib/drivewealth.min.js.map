{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap afd0a95e46e1bc6a92a5","webpack:///src/index.js","webpack:///src/Account.js","webpack:///src/request.js","webpack:///src/Config.js","webpack:///src/Sessions.js","webpack:///src/Order.js","webpack:///src/Funding.js","webpack:///src/Instrument.js","webpack:///src/User.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","_Account","_Funding","_Instrument","_Order","_User","_Sessions","_Config","_request","ENVIRONMENTS","Account","Funding","Instrument","Order","User","Sessions","setup","request","data","_classCallCheck","_arr","_i","length","key","type","cb","_request2","default","method","endpoint","userID","accountID","sessionKey","_Sessions2","get","err","queryString","arguments","_arguments","Array","prototype","slice","startDate","getFullYear","getMonth","getDate","performance","parentDetails","accountNo","accountType","_Order2","create","undefined","_Funding2","getFundingMethods","map","account","CASH","ORDERS","TRANSACTIONS","POSITIONS","ALL","_ref","onSuccess","onError","_ref$method","body","_ref$addlHeaders","addlHeaders","_ref$host","host","HOSTS","API","headers","Accept","header","Config","env","JSON","stringify","httpImpl","statusCode","resHeaders","resBody","contentType","indexOf","parse","String","appTypeID","appVersion","_ref$wlpID","wlpID","referralCode","APPS","REPORTS","UAT","_defineProperty","_UAT","PROD","_PROD","_keys","_mainUser","sessions","rejectionReason","ordRejReason","status","ordStatus","ordType","orderID","instrument","_ref2","side","qty","amountCash","comment","autoStop","price","_ref2$waitForFill","waitForFill","_ref2$fillRetryInterv","fillRetryInterval","_ref2$fillMaxRetries","fillMaxRetries","Error","TYPES","MARKET","instrumentID","orderQty","STOP","limitPrice","LIMIT","checkStatus","getByID","order","STATUSES","NEW","PARTIAL_FILL","setTimeout","BUY","SELL","FILL","CANCELED","REJECTED","language","minAmount","maxAmount","amount","_ref$filters","filters","name","country","currency","allowed","DEPOSIT","WITHDRAW","DEPOSIT_AND_WITHDRAW","getQuote","symbol","getChartData","symbols","join","getAny","ins","includeFundamentals","tradeStatus","criteria","userPassedOneSymbol","isArray","sym","obj","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","rawQuote","value","parsedQuote","bid","ask","return","compression","timeParams","dateStart","toISOString","replace","dateEnd","INACTIVE","ACTIVE","CLOSED","DAY","MINUTE_1","MINUTE_5","MINUTE_30","HOUR","WEEK","_Account2","getListForUserID","getAllSettings","formattedData","setting","_this","remove","username","password","languageID","osType","osVersion","scrRes","ipAddress","save","getByUserID","user","firstName","lastName","email","_ref$referralCode","utmCampaign","utmContent","utmMedium","utmSource","utmTerm","emailAddress1","login","PENDING","APPROVED","REVOKED"],"mappings":"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","file":"drivewealth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drivewealth\"] = factory();\n\telse\n\t\troot[\"drivewealth\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap afd0a95e46e1bc6a92a5","import Account from \"./Account\";\nimport Funding from \"./Funding\";\nimport Instrument from \"./Instrument\";\nimport Order from \"./Order\";\nimport User from \"./User\";\nimport Sessions from \"./Sessions\";\nimport { setup, ENVIRONMENTS } from \"./Config\";\nimport request from \"./request\";\n\nexport default {\n    ENVIRONMENTS,\n\n    Account,\n    Funding,\n    Instrument,\n    Order,\n    User,\n    Sessions,\n\n    setup,\n    request,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport Order from \"./Order\";\nimport Funding from \"./Funding\";\n\nexport default class Account {\n\n    constructor(data) {\n        for (let key of [\n            \"accountID\",\n            \"userID\",\n            \"accountNo\",\n            \"accountType\",\n            \"currencyID\",\n            \"ibID\",\n            \"margin\",\n            \"nickname\",\n            \"openedWhen\",\n            \"patternDayTrades\",\n            \"status\",\n            \"tradingType\",\n            \"accountMgmtType\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    getBlotter(type, cb) {\n        if (type && !cb) {\n            cb = type;\n            type = null;\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/accountSummary/${this.accountID}${type ? '/' + type : \"\"}`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, type ? data[type] : data);\n        }, err => cb && cb(err));\n    }\n\n    // getPerformance(startDate, endDate, cb)\n    // getPerformance(period, cb)\n    // getPerformance(cb)\n    getPerformance() {\n        let queryString = \"\";\n        let cb;\n        if (arguments.length === 3) {\n            cb = arguments[2];\n            const [ startDate, endDate ] = arguments;\n            queryString += \"/dateRange?\";\n            queryString += `startDate=${startDate.getFullYear()}${startDate.getMonth() + 1}${startDate.getDate()}`;\n            queryString +=  `&endDate=${startDate.getFullYear()}${startDate.getMonth() + 1}${startDate.getDate()}`;\n        } else if (arguments.length === 2) {\n            cb = arguments[1];\n            queryString += `/history?period=${arguments[0]}`;\n        } else {\n            cb = arguments[0];\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/accountPerformance/${this.accountID}${queryString}`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data.performance);\n        }, err => cb && cb(err));\n    }\n\n    placeOrder(type, data, cb) {\n        const parentDetails = {\n            accountID: this.accountID,\n            accountNo: this.accountNo,\n            accountType: this.accountType,\n            userID: this.userID,\n        };\n\n        return Order.create(type, parentDetails, data, cb);\n    }\n\n    getFundingMethods(data = {}, cb) {\n        data.userID = this.userID;\n        data.accountID = this.accountID;\n        return Funding.getFundingMethods(data, cb);\n    }\n\n    static get BLOTTER_TYPES() { return {\n        CASH: \"cash\",\n        ORDERS: \"orders\",\n        TRANSACTIONS: \"transactions\",\n        POSITIONS: \"positions\",\n        ALL: null,\n    } };\n\n    static getListForUserID(userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${userID}/accounts`,\n            sessionKey: Sessions.get(userID)\n        }, (data) => {\n            cb && cb(null, data.map(account => new Account(account)));\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Account.js","import { Config, HOSTS } from \"./Config\";\n\nexport default function request({\n    method = \"GET\",\n    endpoint,\n    sessionKey,\n    body,\n    addlHeaders = {},\n    host = HOSTS.API,\n}, onSuccess, onError) {\n    let headers = {\n        Accept: \"application/json\"\n    };\n    if (method === \"POST\" || method === \"PUT\" || method === \"PATCH\") {\n        headers[\"Content-Type\"] = \"application/json\";\n    }\n    if (sessionKey) {\n        headers[\"x-mysolomeo-session-key\"] = sessionKey;\n    }\n    for (let header in addlHeaders) {\n        headers[header] = addlHeaders[header];\n    }\n\n    endpoint = Config.env[host] + endpoint;\n\n    if (headers[\"Content-Type\"] === \"application/json\") body = JSON.stringify(body);\n\n    Config.httpImpl(method, endpoint, headers, body, (statusCode, resHeaders, resBody) => {\n        const contentType = resHeaders[\"Content-Type\"] || resHeaders[\"content-type\"] || \"\";\n        if (resBody && contentType.indexOf(\"application/json\") !== -1) {\n            resBody = JSON.parse(resBody);\n        }\n\n        if (String(statusCode)[0] === \"2\" || String(statusCode)[0] === \"3\") {\n            onSuccess(resBody, statusCode, resHeaders);\n        } else {\n            onError(resBody, statusCode, resHeaders);\n        }\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","export const Config = {\n    env: null,\n    httpImpl: null,\n    appTypeID: null,\n    appVersion: null,\n    referralCode: null,\n};\n\nexport const HOSTS = {\n    API: \"api\",\n    APPS: \"apps\",\n    REPORTS: \"reports\"\n};\n\nexport const ENVIRONMENTS = {\n    UAT: {\n        [HOSTS.API]: \"http://api.drivewealth.io/v1\",\n        [HOSTS.APPS]: \"http://apps.drivewealth.io/\",\n        [HOSTS.REPORTS]: \"http://reports.drivewealth.io/\",\n    },\n    PROD: {\n        [HOSTS.API]: \"https://api.drivewealth.net/v1\",\n        [HOSTS.APPS]: \"https://apps.drivewealth.com/\",\n        [HOSTS.REPORTS]: \"https://reports.drivewealth.com\",\n    },\n};\n\nexport function setup({\n    env,\n    httpImpl,\n    appTypeID,\n    appVersion,\n    wlpID = \"DW\",\n    referralCode,\n}) {\n    Config.env = env;\n    Config.httpImpl = httpImpl;\n    Config.appTypeID = appTypeID;\n    Config.appVersion = appVersion;\n    Config.wlpID = wlpID;\n    Config.referralCode = referralCode;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.js","class Sessions {\n    constructor() {\n        this._keys = {};\n        this._mainUser = null;\n    }\n\n    save(userID, sessionKey) {\n        this._keys[userID] = sessionKey;\n        if (!this._mainUser) this._mainUser = userID;\n    }\n\n    get(userID) {\n        return this._keys[userID];\n    }\n\n    getAny() {\n        return this._keys[this._mainUser];\n    }\n\n    remove(userID) {\n        delete this._keys[userID];\n    }\n}\n\nexport const sessions = new Sessions();\nexport default sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sessions.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport default class Order {\n\n    constructor(data) {\n        for (let key of [\n            \"orderID\",\n            \"accountID\",\n            \"userID\",\n            \"cumQty\",\n            \"accountNo\",\n            \"comment\",\n            \"commission\",\n            \"createdByID\",\n            \"createdWhen\",\n            \"executedWhen\",\n            \"grossTradeAmt\",\n            \"instrumentID\",\n            \"leavesQty\",\n            \"orderNo\",\n            \"orderQty\",\n            \"side\",\n            \"autoStop\",\n        ]) {\n            this[key] = data[key];\n        }\n        this.rejectionReason = data.ordRejReason;\n        this.status = data.ordStatus;\n        this.type = data.ordType;\n    }\n\n    cancel(cb) {\n        request({\n            method: \"DELETE\",\n            endpoint: `/orders/${this.orderID}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    static get SIDES() { return {\n        BUY: \"B\",\n        SELL: \"S\",\n    } };\n\n    static get TYPES() { return {\n        MARKET: \"1\",\n        LIMIT: \"2\",\n        STOP: \"3\",\n    } };\n\n    static get STATUSES() { return {\n        NEW: \"0\",\n        PARTIAL_FILL: \"1\",\n        FILL: \"2\",\n        CANCELED: \"4\",\n        REJECTED: \"8\",\n    } }\n\n    static getByID(orderID, userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/orders/${orderID}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, new Order(data));\n        }, err => cb && cb(err));\n    }\n\n    static create(type, {\n        accountID,\n        accountNo,\n        userID,\n        accountType,\n    }, {\n        instrument,\n        side,\n        qty,\n        amountCash,\n        comment,\n        autoStop,\n        price,\n        waitForFill = true,\n        fillRetryInterval = 500,\n        fillMaxRetries = 10,\n    }, cb) {\n        if (amountCash && qty) throw new Error(`\"qty\" and \"amountCash\" are mutually exclusive.`);\n        if (type !== Order.TYPES.MARKET && !price) throw new Error(`Limit and stop orders require a \"price.\"`);\n        if (type !== Order.TYPES.MARKET && autoStop) throw new Error(`\"autoStop\" is only allowed for market orders.`);\n\n        request({\n            method: \"POST\",\n            endpoint: \"/orders\",\n            sessionKey: Sessions.get(userID),\n            body: {\n                instrumentID: instrument.instrumentID || instrument.id || instrument,\n                accountID,\n                accountNo,\n                userID,\n                accountType,\n                ordType: type,\n                side,\n                orderQty: qty ? qty : undefined,\n                amountCash: amountCash ? amountCash : undefined,\n                comment,\n                autoStop,\n                price: type === Order.TYPES.STOP ? price : undefined,\n                limitPrice: type === Order.TYPES.LIMIT ? price : undefined,\n            },\n        }, (data) => {\n            if (!Order.TYPES.MARKET || !waitForFill) return cb && cb(null, data.orderID);\n\n            let poll, retries = fillMaxRetries;\n            const checkStatus = () => {\n                fillMaxRetries--;\n                Order.getByID(data.orderID, userID, (err, order) => {\n                    if (err) return cb && cb(err);\n                    if (fillMaxRetries <= 0) return cb && cb(null, order);\n\n                    if (order.status !== Order.STATUSES.NEW && order.status !== Order.STATUSES.PARTIAL_FILL) {\n                        return cb && cb(null, order);\n                    } else {\n                        setTimeout(checkStatus, fillRetryInterval);\n                    }\n                });\n            };\n            setTimeout(checkStatus, fillRetryInterval);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Order.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport { Config, HOSTS } from \"./Config\";\n\nexport default class Funding {\n\n    static get ALLOWED_TYPES() { return {\n        DEPOSIT: \"DEPOSIT\",\n        WITHDRAW: \"WITHDRAW\",\n        DEPOSIT_AND_WITHDRAW: \"DEPOSIT_AND_WITHDRAW\",\n    } }\n\n    static getFundingMethods({\n        userID,\n        accountID,\n        language,\n        minAmount,\n        maxAmount,\n        amount,\n        filters = {},\n    } = {}, cb) {\n        if (amount && (minAmount || maxAmount)) throw new Error(`\"amount\" is not compatible with \"minAmount\" or \"maxAmount.\"`);\n\n        let queryString = `partner=${Config.wlpID}&userID=${userID}&accountID=${accountID}`;\n        if (language) queryString += `&language=${language}`;\n        if (minAmount) queryString += `&minAmount=${minAmount}`;\n        if (maxAmount) queryString += `&maxAmount=${maxAmount}`;\n        if (amount) queryString += `&amount=${amount}`;\n        if (filters.name) queryString += `&filter[name]=${filters.name}`;\n        if (filters.country) queryString += `&filter[country]=${filters.country}`;\n        if (filters.currency) queryString += `&filter[currency]=${filters.currency}`;\n        if (filters.allowed) queryString += `&filter[allowed]=${filters.allowed}`;\n\n        request({\n            method: \"GET\",\n            host: HOSTS.APPS,\n            endpoint: `/funding/methods?${queryString}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    static getPastDeposits(userID, cb) {\n        request({\n            endpoint: `/funding/status`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data.data);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Funding.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport default class Instrument {\n\n    constructor(data) {\n        for (let key of [\n            \"instrumentID\",\n            \"name\",\n            \"exchangeID\",\n            \"instrumentTypeID\",\n            \"orderSizeMax\",\n            \"orderSizeMin\",\n            \"orderSizeStep\",\n            \"rateAsk\",\n            \"rateBid\",\n            \"ratePrecision\",\n            \"symbol\",\n            \"tradeStatus\",\n            \"urlImage\",\n            \"urlInvestor\",\n            \"chaikinPgr\",\n            \"priorClose\",\n            \"marketState\",\n            \"fundamentalDataModel\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    static get TRADE_STATUSES() { return {\n        INACTIVE: \"0\",\n        ACTIVE: \"1\",\n        CLOSED: \"2\",\n    } }\n\n    static get CHART_COMPRESSIONS() { return {\n        DAY: 0,\n        MINUTE_1: 1,\n        MINUTE_5: 4,\n        MINUTE_30: 8,\n        HOUR: 9,\n        WEEK: 10\n    } }\n\n    static getBySymbol(symbol, cb) {\n        let symbols = symbol;\n        if (typeof symbol === \"string\") symbols = [symbol];\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments?symbol${symbols.length > 1 ? \"s\" : \"\"}=${symbols.join(',')}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            data = data.map(ins => new Instrument(ins));\n            cb && cb(null, typeof symbol === \"string\" ? data[0] : data);\n        }, err => cb && cb(err));\n    }\n\n    static getByID(id, includeFundamentals = true, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/instruments/${id}${includeFundamentals ? '?options=F' : ''}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, new Instrument(data));\n        }, err => cb && cb(err));\n    }\n\n    static getAll(tradeStatus, cb) {\n        if (!cb) {\n            cb = tradeStatus;\n            tradeStatus = \"-1\";\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments?tradeStatus=${tradeStatus}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.map(ins => new Instrument(ins)));\n        }, err => cb && cb(err));\n    }\n\n    static search(criteria, cb) {\n        let queryString = \"?\";\n        if (criteria.symbol) queryString += `symbol=${criteria.symbol}&`;\n        if (criteria.name) queryString += `name=${criteria.name}&`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments${queryString}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.map(ins => new Instrument(ins)));\n        }, err => cb && cb(err));\n    }\n\n    getQuote(cb) {\n        return Instrument.getQuote(this.symbol, cb);\n    }\n\n    static getQuote(symbol, cb) {\n        let userPassedOneSymbol = false;\n        if (!Array.isArray(symbol)) {\n            userPassedOneSymbol = true;\n            symbol = [symbol];\n        }\n        symbol = symbol.map(sym => {\n            return sym instanceof Instrument ? sym.symbol : sym;\n        });\n\n        request({\n            method: \"GET\",\n            endpoint: `/quotes?symbols=${symbol.join(\",\")}`,\n            sessionKey: Sessions.getAny(),\n            addlHeaders: {\n                \"Accept\": \"text/plain\"\n            }\n        }, (data) => {\n            let obj = {};\n            data = data.split(\"|\").slice(10);\n            for (let rawQuote of data) {\n                const parsedQuote = rawQuote.split(\",\");\n                obj[parsedQuote[0]] = {\n                    bid: parsedQuote[1],\n                    ask: parsedQuote[2],\n                };\n            }\n            if (userPassedOneSymbol) obj = obj[symbol[0]];\n            cb && cb(null, obj);\n        }, err => cb && cb(err));\n    }\n\n    getChartData() {\n        if (arguments.length === 4) {\n            return Instrument.getChartData(this.instrumentID, arguments[0], arguments[1], arguments[2], arguments[3]);\n        } else {\n            return Instrument.getChartData(this.instrumentID, arguments[0], arguments[1], arguments[2]);\n        }\n    }\n\n    static getChartData(instrumentID, compression) {\n        let cb, timeParams;\n        if (arguments.length === 5) {\n            const dateStart = arguments[2].toISOString().replace(/\\.\\d{3}/, \"\");\n            const dateEnd   = arguments[3].toISOString().replace(/\\.\\d{3}/, \"\");\n            timeParams = `dateStart=${dateStart}&dateEnd=${dateEnd}`;\n            cb = arguments[4];\n        } else {\n            timeParams = `tradingDays=${arguments[2]}`;\n            cb = arguments[3];\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/bars?instrumentID=${instrumentID}&compression=${compression}&${timeParams}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.data.split(\"|\"));\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js","import request from \"./request\";\nimport { Config } from \"./Config\";\nimport Sessions from \"./Sessions\";\nimport Account from \"./Account\";\n\nexport default class User {\n\n    constructor(data) {\n        for (let key of [\n            \"countryID\",\n            \"emailAddress\",\n            \"firstName\",\n            \"languageID\",\n            \"lastName\",\n            \"phoneNumber\",\n            \"referralCode\",\n            \"userID\",\n            \"username\",\n            \"wlpID\",\n            \"status\",\n            \"usCitizen\",\n            \"lastLoginWhen\",\n            \"citizenship\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    getAccounts(cb) {\n        Account.getListForUserID(this.userID, cb);\n    }\n\n    // getSettings(key, cb)\n    // getSettings(cb)\n    getSettings() {\n        if (arguments.length === 1) {\n            this.getAllSettings(arguments[0]);\n        }\n        let cb = arguments[1];\n\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/settings/${arguments[0]}`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data.value);\n        }, err => cb && cb(err));\n    }\n\n    getAllSettings(cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/settings`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            let formattedData = {};\n            for (let setting of data) {\n                formattedData[setting.key] = setting.value;\n            }\n            cb && cb(null, formattedData);\n        }, err => cb && cb(err));\n    }\n\n    setSetting(key, value, cb) {\n        request({\n            method: \"POST\",\n            endpoint: `/users/${this.userID}/settings`,\n            sessionKey: Sessions.get(this.userID),\n            body: {\n                key, value\n            }\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    unsetSetting(key, cb) {\n        request({\n            method: \"DELETE\",\n            endpoint: `/users/${this.userID}/settings/${key}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    getStatus() {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/status`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    logout() {\n        request({\n            method: \"DELETE\",\n            endpoint: `/userSessions/${Sessions.get(this.userID)}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            Sessions.remove(this.userID);\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    static get STATUSES() { return {\n        PENDING: 1,\n        APPROVED: 2,\n        REJECTED: 3,\n        REVOKED: 4,\n        CLOSED: 5,\n    } }\n\n    static getByUserID(userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${userID}`,\n            sessionKey: Sessions.get(userID)\n        }, (data) => {\n            cb && cb(null, new User(data));\n        }, err => cb && cb(err));\n    }\n\n    static login(username, password, cb) {\n        request({\n            method: \"POST\",\n            endpoint: \"/userSessions\",\n            body: {\n                username,\n                password,\n                appTypeID: Config.appTypeID,\n                appVersion: Config.appVersion,\n                languageID: \"en_US\",\n                osType: \"unknown\",\n                osVersion: \"unknown\",\n                scrRes: \"unknown\",\n                ipAddress: \"unknown\"\n            }\n        }, (data) => {\n            Sessions.save(data.userID, data.sessionKey);\n            User.getByUserID(data.userID, (err, user) => {\n                if (err) return cb && cb(err);\n                cb && cb(null, user);\n            });\n        }, err => cb && cb(err));\n    }\n\n    static isUsernameAvailable(username, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users?username=${username}`,\n        }, () => {\n            cb && cb(null, false);\n        }, (err, statusCode) => {\n            if (statusCode === 404) return cb && cb(null, true);\n            cb && cb(err);\n        });\n    }\n\n    static create({\n        username,\n        password,\n        firstName,\n        lastName,\n        email,\n        languageID,\n        referralCode = Config.referralCode,\n        utmCampaign,\n        utmContent,\n        utmMedium,\n        utmSource,\n        utmTerm,\n    }, cb) {\n        request({\n            method: \"POST\",\n            endpoint: \"/signups/live\",\n            body: {\n                username,\n                password,\n                firstName,\n                lastName,\n                emailAddress1: email,\n                languageID,\n                wlpID: Config.wlpID,\n                referralCode,\n                utmCampaign,\n                utmContent,\n                utmMedium,\n                utmSource,\n                utmTerm,\n            },\n        }, (data) => {\n            return User.login(username, password, cb);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/User.js"]}