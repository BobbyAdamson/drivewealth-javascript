{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap a3103e85964eee728187","webpack:///src/index.js","webpack:///src/Account.js","webpack:///src/request.js","webpack:///src/Config.js","webpack:///src/Sessions.js","webpack:///src/Order.js","webpack:///src/Instrument.js","webpack:///src/User.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","_Account","_Instrument","_Order","_User","_Config","ENVIRONMENTS","Account","Instrument","Order","User","setup","_request","_Sessions","data","_classCallCheck","_arr","_i","length","key","type","cb","_request2","default","method","endpoint","userID","accountID","sessionKey","_Sessions2","get","err","queryString","arguments","_arguments","Array","prototype","slice","startDate","getFullYear","getMonth","getDate","performance","parentDetails","accountNo","accountType","_Order2","create","map","account","CASH","ORDERS","TRANSACTIONS","POSITIONS","ALL","request","_ref","onSuccess","onError","_ref$method","undefined","body","_ref$addlHeaders","addlHeaders","_ref$host","host","headers","Accept","header","Config","env","JSON","stringify","httpImpl","statusCode","resHeaders","resBody","parse","String","appTypeID","appVersion","_ref$wlpID","wlpID","UAT","api","apps","reports","PROD","Sessions","_keys","_mainUser","sessions","rejectionReason","ordRejReason","status","ordStatus","ordType","orderID","instrument","_ref2","side","qty","amountCash","comment","autoStop","price","_ref2$waitForFill","waitForFill","_ref2$fillRetryInterv","fillRetryInterval","_ref2$fillMaxRetries","fillMaxRetries","Error","TYPES","MARKET","instrumentID","orderQty","STOP","limitPrice","LIMIT","checkStatus","getByID","order","STATUSES","NEW","PARTIAL_FILL","setTimeout","BUY","SELL","FILL","CANCELED","REJECTED","getQuote","symbol","getChartData","symbols","join","getAny","ins","includeFundamentals","tradeStatus","criteria","name","userPassedOneSymbol","isArray","sym","obj","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","rawQuote","value","parsedQuote","bid","ask","return","compression","timeParams","dateStart","toISOString","replace","dateEnd","INACTIVE","ACTIVE","CLOSED","DAY","MINUTE_1","MINUTE_5","MINUTE_30","HOUR","WEEK","_Account2","getListForUserID","getAllSettings","formattedData","setting","_this","remove","username","password","languageID","osType","osVersion","scrRes","ipAddress","save","getByUserID","user","firstName","lastName","email","referralCode","utmCampaign","utmContent","utmMedium","utmSource","utmTerm","emailAddress1","login","PENDING","APPROVED","REVOKED"],"mappings":"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","file":"drivewealth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drivewealth\"] = factory();\n\telse\n\t\troot[\"drivewealth\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a3103e85964eee728187","import Account from \"./Account\";\nimport Instrument from \"./Instrument\";\nimport Order from \"./Order\";\nimport User from \"./User\";\nimport { setup, ENVIRONMENTS } from \"./Config\";\n\nexport default {\n    ENVIRONMENTS,\n\n    Account,\n    Instrument,\n    Order,\n    User,\n\n    setup\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport Order from \"./Order\";\n\nexport default class Account {\n\n    constructor(data) {\n        for (let key of [\n            \"accountID\",\n            \"userID\",\n            \"accountNo\",\n            \"accountType\",\n            \"currencyID\",\n            \"ibID\",\n            \"margin\",\n            \"nickname\",\n            \"openedWhen\",\n            \"patternDayTrades\",\n            \"status\",\n            \"tradingType\",\n            \"accountMgmtType\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    getBlotter(type, cb) {\n        if (type && !cb) {\n            cb = type;\n            type = null;\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/accountSummary/${this.accountID}${type ? '/' + type : \"\"}`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, type ? data[type] : data);\n        }, err => cb && cb(err));\n    }\n\n    // getPerformance(startDate, endDate, cb)\n    // getPerformance(period, cb)\n    // getPerformance(cb)\n    getPerformance() {\n        let queryString = \"\";\n        let cb;\n        if (arguments.length === 3) {\n            cb = arguments[2];\n            const [ startDate, endDate ] = arguments;\n            queryString += \"/dateRange?\";\n            queryString += `startDate=${startDate.getFullYear()}${startDate.getMonth() + 1}${startDate.getDate()}`;\n            queryString +=  `&endDate=${startDate.getFullYear()}${startDate.getMonth() + 1}${startDate.getDate()}`;\n        } else if (arguments.length === 2) {\n            cb = arguments[1];\n            queryString += `/history?period=${arguments[0]}`;\n        } else {\n            cb = arguments[0];\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/accountPerformance/${this.accountID}${queryString}`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data.performance);\n        }, err => cb && cb(err));\n    }\n\n    placeOrder(type, data, cb) {\n        const parentDetails = {\n            accountID: this.accountID,\n            accountNo: this.accountNo,\n            accountType: this.accountType,\n            userID: this.userID,\n        };\n\n        return Order.create(type, parentDetails, data, cb);\n    }\n\n    static get BLOTTER_TYPES() { return {\n        CASH: \"cash\",\n        ORDERS: \"orders\",\n        TRANSACTIONS: \"transactions\",\n        POSITIONS: \"positions\",\n        ALL: null,\n    } };\n\n    static getListForUserID(userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${userID}/accounts`,\n            sessionKey: Sessions.get(userID)\n        }, (data) => {\n            cb && cb(null, data.map(account => new Account(account)));\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Account.js","import { Config } from \"./Config\";\n\nexport default function request({\n    method = \"GET\",\n    endpoint,\n    sessionKey,\n    body,\n    addlHeaders = {},\n    host = \"api\",\n}, onSuccess, onError) {\n    let headers = {\n        Accept: \"application/json\"\n    };\n    if (method === \"POST\" || method === \"PUT\" || method === \"PATCH\") {\n        headers[\"Content-Type\"] = \"application/json\";\n    }\n    if (sessionKey) {\n        headers[\"x-mysolomeo-session-key\"] = sessionKey;\n    }\n    for (let header in addlHeaders) {\n        headers[header] = addlHeaders[header];\n    }\n\n    endpoint = Config.env[host] + endpoint;\n\n    if (headers[\"Content-Type\"] === \"application/json\") body = JSON.stringify(body);\n\n    Config.httpImpl(method, endpoint, headers, body, (statusCode, resHeaders, resBody) => {\n        if ( (resHeaders[\"Content-Type\"] === \"application/json\" || resHeaders[\"content-type\"] === \"application/json\")\n            && resBody) {\n            resBody = JSON.parse(resBody);\n        }\n\n        if (String(statusCode)[0] === \"2\" || String(statusCode)[0] === \"3\") {\n            onSuccess(resBody, statusCode, resHeaders);\n        } else {\n            onError(resBody, statusCode, resHeaders);\n        }\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","export const Config = {\n    env: null,\n    httpImpl: null,\n    appTypeID: null,\n    appVersion: null,\n};\n\nexport const ENVIRONMENTS = {\n    UAT: {\n        api: \"http://api.drivewealth.io/v1\",\n        apps: \"http://apps.drivewealth.io/\",\n        reports: \"http://reports.drivewealth.io/\",\n    },\n    PROD: {\n        api: \"https://api.drivewealth.net/v1\",\n        apps: \"https://apps.drivewealth.com/\",\n        reports: \"https://reports.drivewealth.com\",\n    },\n};\n\nexport function setup({\n    env,\n    httpImpl,\n    appTypeID,\n    appVersion,\n    wlpID = \"DW\",\n}) {\n    Config.env = env;\n    Config.httpImpl = httpImpl;\n    Config.appTypeID = appTypeID;\n    Config.appVersion = appVersion;\n    Config.wlpID = wlpID;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.js","class Sessions {\n    constructor() {\n        this._keys = {};\n        this._mainUser = null;\n    }\n\n    save(userID, sessionKey) {\n        this._keys[userID] = sessionKey;\n        if (!this._mainUser) this._mainUser = userID;\n    }\n\n    get(userID) {\n        return this._keys[userID];\n    }\n\n    getAny() {\n        return this._keys[this._mainUser];\n    }\n\n    remove(userID) {\n        delete this._keys[userID];\n    }\n}\n\nexport const sessions = new Sessions();\nexport default sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sessions.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport default class Order {\n\n    constructor(data) {\n        for (let key of [\n            \"orderID\",\n            \"accountID\",\n            \"userID\",\n            \"cumQty\",\n            \"accountNo\",\n            \"comment\",\n            \"commission\",\n            \"createdByID\",\n            \"createdWhen\",\n            \"executedWhen\",\n            \"grossTradeAmt\",\n            \"instrumentID\",\n            \"leavesQty\",\n            \"orderNo\",\n            \"orderQty\",\n            \"side\",\n            \"autoStop\",\n        ]) {\n            this[key] = data[key];\n        }\n        this.rejectionReason = data.ordRejReason;\n        this.status = data.ordStatus;\n        this.type = data.ordType;\n    }\n\n    cancel(cb) {\n        request({\n            method: \"DELETE\",\n            endpoint: `/orders/${this.orderID}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    static get SIDES() { return {\n        BUY: \"B\",\n        SELL: \"S\",\n    } };\n\n    static get TYPES() { return {\n        MARKET: \"1\",\n        LIMIT: \"2\",\n        STOP: \"3\",\n    } };\n\n    static get STATUSES() { return {\n        NEW: \"0\",\n        PARTIAL_FILL: \"1\",\n        FILL: \"2\",\n        CANCELED: \"4\",\n        REJECTED: \"8\",\n    } }\n\n    static getByID(orderID, userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/orders/${orderID}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, new Order(data));\n        }, err => cb && cb(err));\n    }\n\n    static create(type, {\n        accountID,\n        accountNo,\n        userID,\n        accountType,\n    }, {\n        instrument,\n        side,\n        qty,\n        amountCash,\n        comment,\n        autoStop,\n        price,\n        waitForFill = true,\n        fillRetryInterval = 500,\n        fillMaxRetries = 10,\n    }, cb) {\n        if (amountCash && qty) throw new Error(`\"qty\" and \"amountCash\" are mutually exclusive.`);\n        if (type !== Order.TYPES.MARKET && !price) throw new Error(`Limit and stop orders require a \"price.\"`);\n        if (type !== Order.TYPES.MARKET && autoStop) throw new Error(`\"autoStop\" is only allowed for market orders.`);\n\n        request({\n            method: \"POST\",\n            endpoint: \"/orders\",\n            sessionKey: Sessions.get(userID),\n            body: {\n                instrumentID: instrument.instrumentID || instrument.id || instrument,\n                accountID,\n                accountNo,\n                userID,\n                accountType,\n                ordType: type,\n                side,\n                orderQty: qty ? qty : undefined,\n                amountCash: amountCash ? amountCash : undefined,\n                comment,\n                autoStop,\n                price: type === Order.TYPES.STOP ? price : undefined,\n                limitPrice: type === Order.TYPES.LIMIT ? price : undefined,\n            },\n        }, (data) => {\n            if (!Order.TYPES.MARKET || !waitForFill) return cb && cb(null, data.orderID);\n\n            let poll, retries = fillMaxRetries;\n            const checkStatus = () => {\n                fillMaxRetries--;\n                Order.getByID(data.orderID, userID, (err, order) => {\n                    if (err) return cb && cb(err);\n                    if (fillMaxRetries <= 0) return cb && cb(null, order);\n\n                    if (order.status !== Order.STATUSES.NEW && order.status !== Order.STATUSES.PARTIAL_FILL) {\n                        return cb && cb(null, order);\n                    } else {\n                        setTimeout(checkStatus, fillRetryInterval);\n                    }\n                });\n            };\n            setTimeout(checkStatus, fillRetryInterval);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Order.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport default class Instrument {\n\n    constructor(data) {\n        for (let key of [\n            \"instrumentID\",\n            \"name\",\n            \"exchangeID\",\n            \"instrumentTypeID\",\n            \"orderSizeMax\",\n            \"orderSizeMin\",\n            \"orderSizeStep\",\n            \"rateAsk\",\n            \"rateBid\",\n            \"ratePrecision\",\n            \"symbol\",\n            \"tradeStatus\",\n            \"urlImage\",\n            \"urlInvestor\",\n            \"chaikinPgr\",\n            \"priorClose\",\n            \"marketState\",\n            \"fundamentalDataModel\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    static get TRADE_STATUSES() { return {\n        INACTIVE: \"0\",\n        ACTIVE: \"1\",\n        CLOSED: \"2\",\n    } }\n\n    static get CHART_COMPRESSIONS() { return {\n        DAY: 0,\n        MINUTE_1: 1,\n        MINUTE_5: 4,\n        MINUTE_30: 8,\n        HOUR: 9,\n        WEEK: 10\n    } }\n\n    static getBySymbol(symbol, cb) {\n        let symbols = symbol;\n        if (typeof symbol === \"string\") symbols = [symbol];\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments?symbol=${symbols.join(',')}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            data = data.map(ins => new Instrument(ins));\n            cb && cb(null, typeof symbol === \"string\" ? data[0] : data);\n        }, err => cb && cb(err));\n    }\n\n    static getByID(id, includeFundamentals = true, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/instruments/${id}${includeFundamentals ? '?options=F' : ''}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, new Instrument(data));\n        }, err => cb && cb(err));\n    }\n\n    static getAll(tradeStatus, cb) {\n        if (!cb) {\n            cb = tradeStatus;\n            tradeStatus = \"-1\";\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments?tradeStatus=${tradeStatus}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.map(ins => new Instrument(ins)));\n        }, err => cb && cb(err));\n    }\n\n    static search(criteria, cb) {\n        let queryString = \"?\";\n        if (criteria.symbol) queryString += `symbol=${criteria.symbol}&`;\n        if (criteria.name) queryString += `name=${criteria.name}&`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments${queryString}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.map(ins => new Instrument(ins)));\n        }, err => cb && cb(err));\n    }\n\n    getQuote(cb) {\n        return Instrument.getQuote(this.symbol, cb);\n    }\n\n    static getQuote(symbol, cb) {\n        let userPassedOneSymbol = false;\n        if (!Array.isArray(symbol)) {\n            userPassedOneSymbol = true;\n            symbol = [symbol];\n        }\n        symbol = symbol.map(sym => {\n            return sym instanceof Instrument ? sym.symbol : sym;\n        });\n\n        request({\n            method: \"GET\",\n            endpoint: `/quotes?symbols=${symbol.join(\",\")}`,\n            sessionKey: Sessions.getAny(),\n            addlHeaders: {\n                \"Accept\": \"text/plain\"\n            }\n        }, (data) => {\n            let obj = {};\n            data = data.split(\"|\").slice(10);\n            for (let rawQuote of data) {\n                const parsedQuote = rawQuote.split(\",\");\n                obj[parsedQuote[0]] = {\n                    bid: parsedQuote[1],\n                    ask: parsedQuote[2],\n                };\n            }\n            if (userPassedOneSymbol) obj = obj[symbol[0]];\n            cb && cb(null, obj);\n        }, err => cb && cb(err));\n    }\n\n    getChartData() {\n        if (arguments.length === 4) {\n            return Instrument.getChartData(this.instrumentID, arguments[0], arguments[1], arguments[2], arguments[3]);\n        } else {\n            return Instrument.getChartData(this.instrumentID, arguments[0], arguments[1], arguments[2]);\n        }\n    }\n\n    static getChartData(instrumentID, compression) {\n        let cb, timeParams;\n        if (arguments.length === 5) {\n            const dateStart = arguments[2].toISOString().replace(/\\.\\d{3}/, \"\");\n            const dateEnd   = arguments[3].toISOString().replace(/\\.\\d{3}/, \"\");\n            timeParams = `dateStart=${dateStart}&dateEnd=${dateEnd}`;\n            cb = arguments[4];\n        } else {\n            timeParams = `tradingDays=${arguments[2]}`;\n            cb = arguments[3];\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/bars?instrumentID=${instrumentID}&compression=${compression}&${timeParams}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.data.split(\"|\"));\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js","import request from \"./request\";\nimport { Config } from \"./Config\";\nimport Sessions from \"./Sessions\";\nimport Account from \"./Account\";\n\nexport default class User {\n\n    constructor(data) {\n        for (let key of [\n            \"countryID\",\n            \"emailAddress\",\n            \"firstName\",\n            \"languageID\",\n            \"lastName\",\n            \"phoneNumber\",\n            \"referralCode\",\n            \"userID\",\n            \"username\",\n            \"wlpID\",\n            \"status\",\n            \"usCitizen\",\n            \"lastLoginWhen\",\n            \"citizenship\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    getAccounts(cb) {\n        Account.getListForUserID(this.userID, cb);\n    }\n\n    // getSettings(key, cb)\n    // getSettings(cb)\n    getSettings() {\n        if (arguments.length === 1) {\n            this.getAllSettings(arguments[0]);\n        }\n        let cb = arguments[1];\n\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/settings/${arguments[0]}`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data.value);\n        }, err => cb && cb(err));\n    }\n\n    getAllSettings(cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/settings`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            let formattedData = {};\n            for (let setting of data) {\n                formattedData[setting.key] = setting.value;\n            }\n            cb && cb(null, formattedData);\n        }, err => cb && cb(err));\n    }\n\n    setSetting(key, value, cb) {\n        request({\n            method: \"POST\",\n            endpoint: `/users/${this.userID}/settings`,\n            sessionKey: Sessions.get(this.userID),\n            body: {\n                key, value\n            }\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    unsetSetting(key, cb) {\n        request({\n            method: \"DELETE\",\n            endpoint: `/users/${this.userID}/settings/${key}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    getStatus() {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/status`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    logout() {\n        request({\n            method: \"DELETE\",\n            endpoint: `/userSessions/${Sessions.get(this.userID)}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            Sessions.remove(this.userID);\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    static get STATUSES() { return {\n        PENDING: 1,\n        APPROVED: 2,\n        REJECTED: 3,\n        REVOKED: 4,\n        CLOSED: 5,\n    } }\n\n    static getByUserID(userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${userID}`,\n            sessionKey: Sessions.get(userID)\n        }, (data) => {\n            cb && cb(null, new User(data));\n        }, err => cb && cb(err));\n    }\n\n    static login(username, password, cb) {\n        request({\n            method: \"POST\",\n            endpoint: \"/userSessions\",\n            body: {\n                username,\n                password,\n                appTypeID: Config.appTypeID,\n                appVersion: Config.appVersion,\n                languageID: \"en_US\",\n                osType: \"unknown\",\n                osVersion: \"unknown\",\n                scrRes: \"unknown\",\n                ipAddress: \"unknown\"\n            }\n        }, (data) => {\n            Sessions.save(data.userID, data.sessionKey);\n            User.getByUserID(data.userID, (err, user) => {\n                if (err) return cb && cb(err);\n                cb && cb(null, user);\n            });\n        }, err => cb && cb(err));\n    }\n\n    static isUsernameAvailable(username, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users?username=${username}`,\n        }, () => {\n            cb && cb(null, false);\n        }, (err, statusCode) => {\n            if (statusCode === 404) return cb && cb(null, true);\n            cb && cb(err);\n        });\n    }\n\n    static create({\n        username,\n        password,\n        firstName,\n        lastName,\n        email,\n        languageID,\n        referralCode,\n        utmCampaign,\n        utmContent,\n        utmMedium,\n        utmSource,\n        utmTerm,\n    }, cb) {\n        request({\n            method: \"POST\",\n            endpoint: \"/signups/live\",\n            body: {\n                username,\n                password,\n                firstName,\n                lastName,\n                emailAddress1: email,\n                languageID,\n                wlpID: Config.wlpID,\n                referralCode,\n                utmCampaign,\n                utmContent,\n                utmMedium,\n                utmSource,\n                utmTerm,\n            },\n        }, (data) => {\n            return User.login(username, password, cb);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/User.js"]}