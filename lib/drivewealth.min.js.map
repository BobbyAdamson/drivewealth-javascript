{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap 2ad4255b2ebf222e8f36","webpack:///src/index.js","webpack:///src/Account.js","webpack:///src/request.js","webpack:///src/Config.js","webpack:///src/Error.js","webpack:///~/extendable-error-class/dist/index.es5.js","webpack:///src/Sessions.js","webpack:///src/Order.js","webpack:///src/Funding.js","webpack:///src/Reports.js","webpack:///src/Instrument.js","webpack:///src/User.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","_Account","_Error","_Funding","_Instrument","_Order","_Reports","_User","_Sessions","_Config","_request","ENVIRONMENTS","HOSTS","Account","Config","Error","Funding","Instrument","Order","Reports","User","Sessions","setup","request","data","_classCallCheck","_arr","_i","length","key","type","cb","_request2","default","method","endpoint","userID","accountID","sessionKey","_Sessions2","get","orders","map","order","_Order2","err","queryString","arguments","_arguments","Array","prototype","slice","startDate","endDate","getFullYear","getMonth","getDate","performance","parentDetails","accountNo","accountType","create","undefined","_Funding2","getFundingMethods","_Reports2","getTransactions","getPlacedOrders","getStatements","getTaxDocuments","getTradeConfirms","fileKey","generateDownloadURL","options","Object","assign","addSubscription","extractIDs","updateSubscription","cancelSubscription","account","TYPES","PRACTICE","responseType","tranAmount","body","_ref","planID","paymentID","params","_defineProperty","startsWith","keys","filter","reduce","x","y","changeSubscription","CASH","ORDERS","TRANSACTIONS","POSITIONS","ALL","PENDING","OPEN","OPEN_NO_NEW_TRADES","CLOSED","LIVE","onSuccess","onError","_ref$method","_ref$addlHeaders","addlHeaders","_ref$host","host","API","headers","Accept","header","env","JSON","stringify","httpImpl","statusCode","resHeaders","resBody","contentType","indexOf","parse","String","error","errorMessage","message","DriveWealthSessionError","DriveWealthError","appTypeID","appVersion","_ref$wlpID","wlpID","appsPartnerID","referralCode","APPS","REPORTS","UAT","_UAT","PROD","_PROD","_extendableErrorClass","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","ExtendableError","_extendableBuiltin2","_this","getPrototypeOf","name","captureStackTrace","stack","cls","ExtendableBuiltin","Reflect","construct","from","_keys","_mainUser","sessions","SEC_FEE_MAX","Number","POSITIVE_INFINITY","rejectionReason","ordRejReason","status","ordStatus","ordType","orderType","price","stopPrice","limitPrice","orderID","instrument","_ref2","side","qty","amountCash","comment","autoStop","_ref2$waitForFill","waitForFill","_ref2$fillRetryInterv","fillRetryInterval","_ref2$fillMaxRetries","fillMaxRetries","MARKET","instrumentID","orderQty","STOP","LIMIT","retries","checkStatus","getByID","STATUSES","NEW","PARTIAL_FILL","setTimeout","_ref3","_ref4","_ref4$waitForFill","_ref4$fillRetryInterv","_ref4$fillMaxRetries","SIDES","BUY","orderResults","ordersMap","acc","next","idx","referenceID","Promise","all","resolve","reject","statusDetails","then","shouldRetry","reference","thisStatus","commissionSchedule","isArray","total","totalFeesOnly","basketPrice","basketSchedule","schedule","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","scheduleItem","basketSize","return","byOrder","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","marketPrice","orderPrice","fractionalRate","baseRate","NEAREST","Math","round","CEIL","ceil","FLOOR","floor","shareAmountRounding","max","baseShares","excessRate","secFee","tafFee","passThroughFees","SELL","min","orderTotal","commission","fees","sec","taf","multipleOrderDelta","FILL","CANCELED","REJECTED","language","minAmount","maxAmount","amount","_ref$filters","filters","country","currency","allowed","pricing","concat","sort","DEPOSIT","WITHDRAW","DEPOSIT_AND_WITHDRAW","toISOString","transaction","url","getQuote","symbol","getChartData","symbols","join","getAny","ins","includeFundamentals","tradeStatus","criteria","userPassedOneSymbol","sym","obj","split","rawQuote","parsedQuote","bid","ask","compression","timeParams","replace","INACTIVE","ACTIVE","DAY","MINUTE_1","MINUTE_5","MINUTE_30","HOUR","WEEK","_listCreditCards","_addCreditCard","cardToken","_removeCreditCard","cardID","_getSettings","_getAllSettings","formattedData","setting","_setSetting","fullName","firstName","lastName","_Account2","getListForUserID","file","uploadDocument","remove","username","password","languageID","osType","osVersion","scrRes","ipAddress","save","getByUserID","user","email","_ref$referralCode","utmCampaign","utmContent","utmMedium","utmSource","utmTerm","loginAutomatically","emailAddress1","login","addressLine1","addressLine2","city","countryID","phoneHome","phoneWork","phone","stateProvince","zipPostalCode","phoneMobile","FormData","append","Content-Type","APPROVED","REVOKED","PHOTO_ID","PROOF_OF_ADDRESS","PHOTO_ID_WITH_PROOF_OF_ADDRESS"],"mappings":"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","file":"drivewealth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drivewealth\"] = factory();\n\telse\n\t\troot[\"drivewealth\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2ad4255b2ebf222e8f36","import Account from \"./Account\";\nimport Error from \"./Error\";\nimport Funding from \"./Funding\";\nimport Instrument from \"./Instrument\";\nimport Order from \"./Order\";\nimport Reports from \"./Reports\";\nimport User from \"./User\";\nimport Sessions from \"./Sessions\";\nimport { Config, setup, ENVIRONMENTS, HOSTS } from \"./Config\";\nimport request from \"./request\";\n\nexport default {\n\tENVIRONMENTS,\n\tHOSTS,\n\n\tAccount,\n\tConfig,\n\tError,\n\tFunding,\n\tInstrument,\n\tOrder,\n\tReports,\n\tUser,\n\tSessions,\n\n\tsetup,\n\trequest,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport Order from \"./Order\";\nimport Funding from \"./Funding\";\nimport Reports from \"./Reports\";\n\nexport default class Account {\n\n\tconstructor(data) {\n\t\tfor (let key of [\n\t\t\t\"accountID\",\n\t\t\t\"userID\",\n\t\t\t\"accountNo\",\n\t\t\t\"accountType\",\n\t\t\t\"currencyID\",\n\t\t\t\"ibID\",\n\t\t\t\"margin\",\n\t\t\t\"nickname\",\n\t\t\t\"openedWhen\",\n\t\t\t\"patternDayTrades\",\n\t\t\t\"status\",\n\t\t\t\"tradingType\",\n\t\t\t\"accountMgmtType\",\n\t\t\t\"commissionSchedule\",\n\t\t]) {\n\t\t\tthis[key] = data[key];\n\t\t}\n\t}\n\n\tgetBlotter(type, cb) {\n\t\tif (type && !cb) {\n\t\t\tcb = type;\n\t\t\ttype = null;\n\t\t}\n\n\t\trequest({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${this.userID}/accountSummary/${this.accountID}${type ? '/' + type : \"\"}`,\n\t\t\tsessionKey: Sessions.get(this.userID)\n\t\t}, (data) => {\n\n\t\t\tif (data.orders) {\n\t\t\t\tdata.orders = data.orders.map(function (order) {\n\t\t\t\t\treturn new Order(order);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcb && cb(null, type ? data[type] : data);\n\t\t}, err => cb && cb(err));\n\t}\n\n\t// getPerformance(startDate, endDate, cb)\n\t// getPerformance(period, cb)\n\t// getPerformance(cb)\n\tgetPerformance() {\n\t\tlet queryString = \"\";\n\t\tlet cb;\n\t\tif (arguments.length === 3) {\n\t\t\tcb = arguments[2];\n\t\t\tconst [ startDate, endDate ] = arguments;\n\t\t\tqueryString += \"/dateRange?\";\n\t\t\tqueryString += `startDate=${startDate.getFullYear()}${(\"0\" + (startDate.getMonth() + 1)).slice(-2)}${(\"0\" + startDate.getDate()).slice(-2)}`;\n\t\t\tqueryString +=  `&endDate=${endDate.getFullYear()}${(\"0\" + (endDate.getMonth() + 1)).slice(-2)}${(\"0\" + endDate.getDate()).slice(-2)}`;\n\t\t} else if (arguments.length === 2) {\n\t\t\tcb = arguments[1];\n\t\t\tqueryString += `/history?period=${arguments[0]}`;\n\t\t} else {\n\t\t\tcb = arguments[0];\n\t\t}\n\n\t\trequest({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${this.userID}/accountPerformance/${this.accountID}${queryString}`,\n\t\t\tsessionKey: Sessions.get(this.userID)\n\t\t}, (data) => {\n\t\t\tcb && cb(null, data.performance);\n\t\t}, err => cb && cb(err));\n\t}\n\n\tplaceOrder(type, data, cb) {\n\t\tconst parentDetails = {\n\t\t\taccountID: this.accountID,\n\t\t\taccountNo: this.accountNo,\n\t\t\taccountType: this.accountType,\n\t\t\tuserID: this.userID,\n\t\t};\n\n\t\treturn Order.create(type, parentDetails, data, cb);\n\t}\n\n\tgetFundingMethods(data = {}, cb) {\n\t\tdata.userID = this.userID;\n\t\tdata.accountID = this.accountID;\n\t\treturn Funding.getFundingMethods(data, cb);\n\t}\n\n\tgetTransactions(startDate, endDate, cb) {\n\t\treturn Reports.getTransactions(this.userID, this.accountNo, startDate, endDate, cb);\n\t}\n\n\tgetPlacedOrders(startDate, endDate, cb) {\n\t\treturn Reports.getPlacedOrders(this.userID, this.accountNo, startDate, endDate, cb);\n\t}\n\n\tgetStatements(startDate, endDate, cb) {\n\t\treturn Reports.getStatements(this.userID, this.accountID, startDate, endDate, cb);\n\t}\n\n\tgetTaxDocuments(startDate, endDate, cb) {\n\t\treturn Reports.getTaxDocuments(this.userID, this.accountID, startDate, endDate, cb);\n\t}\n\n\tgetTradeConfirms(startDate, endDate, cb) {\n\t\treturn Reports.getTradeConfirms(this.userID, this.accountID, startDate, endDate, cb);\n\t}\n\n\tgenerateDownloadURL(fileKey, cb) {\n\t\treturn Reports.generateDownloadURL(this.userID, this.accountID, fileKey, cb);\n\t}\n\n\tstatic get BLOTTER_TYPES() { return {\n\t\tCASH: \"cash\",\n\t\tORDERS: \"orders\",\n\t\tTRANSACTIONS: \"transactions\",\n\t\tPOSITIONS: \"positions\",\n\t\tALL: null,\n\t} };\n\n\tstatic get STATUSES() { return {\n\t\tPENDING: 1,\n\t\tOPEN: 2,\n\t\tOPEN_NO_NEW_TRADES: 3,\n\t\tCLOSED: 9,\n\t} };\n\n\tstatic get TYPES() { return {\n\t\tPRACTICE: 1,\n\t\tLIVE: 2,\n\t} };\n\n\tstatic getListForUserID(userID, cb) {\n\t\trequest({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/users/${userID}/accounts`,\n\t\t\tsessionKey: Sessions.get(userID)\n\t\t}, (data) => {\n\t\t\tcb && cb(null, data.map(account => new Account(account)));\n\t\t}, err => cb && cb(err));\n\t}\n\n\tstatic create(userID, type, data, cb) {\n\t\tif (type === Account.TYPES.PRACTICE) {\n\t\t\tdata = {\n\t\t\t\tuserID,\n\t\t\t\tresponseType: \"full\",\n\t\t\t\ttranAmount: data,\n\t\t\t};\n\t\t}\n\n\t\trequest({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: type === Account.TYPES.PRACTICE\n\t\t\t\t? `/signups/practice`\n\t\t\t\t: `/signups/live`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: data,\n\t\t}, (data) => {\n\t\t\tcb && cb(null, data);\n\t\t}, err => cb && cb(err));\n\t}\n\n\tstatic changeSubscription (method, {\n\t\tuserID,\n\t\taccountID,\n\t\tplanID,\n\t\tpaymentID,\n\t}, cb) {\n\n\t\tconst params = {\n\t\t\tmethod,\n\t\t\tendpoint: `/users/${userID}/accounts/${accountID}/subscriptions`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: method !== \"DELETE\" && {\n\t\t\t\tplanID,\n\t\t\t\t[paymentID.startsWith(\"card\") ? \"cardID\" : \"bankAccountID\"]: paymentID,\n\t\t\t},\n\t\t};\n\n\t\trequest(\n\t\t\tObject.keys(params)\n\t\t\t.filter(key => params[key])\n\t\t\t.reduce((x, y) => Object.assign({}, x, { [y]: params[y] }), {}),\n\t\t\tdata => {\n\t\t\t\tcb && cb(null, data);\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tcb && cb(err);\n\t\t\t},\n\t\t);\n\t}\n\n\tstatic addSubscription (options, cb) {\n\t\tAccount.changeSubscription(\"POST\", options, cb);\n\t}\n\n\tstatic updateSubscription (options, cb) {\n\t\tAccount.changeSubscription(\"PUT\", options, cb);\n\t}\n\n\tstatic cancelSubscription (options, cb) {\n\t\tAccount.changeSubscription(\"DELETE\", options, cb);\n\t}\n\n\textractIDs (options) {\n\t\treturn Object.assign({}, options, {\n\t\t\tuserID: this.userID,\n\t\t\taccountID: this.accountID,\n\t\t});\n\t}\n\n\taddSubscription (options, cb) {\n\t\tAccount.addSubscription(this.extractIDs(options), cb);\n\t}\n\n\tupdateSubscription (options, cb) {\n\t\tAccount.updateSubscription(this.extractIDs(options), cb);\n\t}\n\n\tcancelSubscription (cb) {\n\t\tAccount.cancelSubscription(this.extractIDs(), cb);\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Account.js","import { Config, HOSTS } from \"./Config\";\nimport { DriveWealthError, DriveWealthSessionError } from \"./Error\";\n\nexport default function request({\n    method = \"GET\",\n    endpoint,\n    sessionKey,\n    body,\n    addlHeaders = {},\n    host = HOSTS.API,\n}, onSuccess, onError) {\n    let headers = {\n        Accept: \"application/json\"\n    };\n    if (method === \"POST\" || method === \"PUT\" || method === \"PATCH\") {\n        headers[\"Content-Type\"] = \"application/json\";\n    }\n    if (sessionKey) {\n        headers[\"x-mysolomeo-session-key\"] = sessionKey;\n    }\n    for (let header in addlHeaders) {\n        headers[header] = addlHeaders[header];\n    }\n\n    endpoint = Config.env[host] + endpoint;\n\n    if (headers[\"Content-Type\"] === \"application/json\") body = JSON.stringify(body);\n\n    Config.httpImpl(method, endpoint, headers, body, (statusCode, resHeaders, resBody) => {\n        const contentType = resHeaders[\"Content-Type\"] || resHeaders[\"content-type\"] || \"\";\n        if (resBody && contentType.indexOf(\"application/json\") !== -1) {\n            try {\n                resBody = JSON.parse(resBody);\n            } catch (err) {\n                // resBody will remain as is\n            }\n        }\n\n        if (String(statusCode)[0] === \"2\" || String(statusCode)[0] === \"3\") {\n            onSuccess(resBody, statusCode, resHeaders);\n        } else {\n            let error, errorMessage;\n            if (resBody) {\n                errorMessage = resBody.message || JSON.stringify(resBody);\n            }\n            error = statusCode == 401 ? new DriveWealthSessionError(errorMessage) : new DriveWealthError(errorMessage);\n            onError(error, resBody, statusCode, resHeaders);\n        }\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","export const Config = {\n    env: null,\n    httpImpl: null,\n    appTypeID: null,\n    appVersion: null,\n    wlpID: null,\n    appsPartnerID: null,\n    referralCode: null,\n};\n\nexport const HOSTS = {\n    API: \"api\",\n    APPS: \"apps\",\n    REPORTS: \"reports\"\n};\n\nexport const ENVIRONMENTS = {\n    UAT: {\n        [HOSTS.API]: \"http://api.drivewealth.io/v1\",\n        [HOSTS.APPS]: \"http://apps.drivewealth.io\",\n        [HOSTS.REPORTS]: \"http://reports.drivewealth.io\",\n    },\n    PROD: {\n        [HOSTS.API]: \"https://api.drivewealth.net/v1\",\n        [HOSTS.APPS]: \"https://apps.drivewealth.com\",\n        [HOSTS.REPORTS]: \"https://reports.drivewealth.net\",\n    },\n};\n\nexport function setup({\n    env,\n    httpImpl,\n    appTypeID,\n    appVersion,\n    wlpID = \"DW\",\n    appsPartnerID,\n    referralCode,\n}) {\n    Config.env = env;\n    Config.httpImpl = httpImpl;\n    Config.appTypeID = appTypeID;\n    Config.appVersion = appVersion;\n    Config.wlpID = wlpID;\n    Config.appsPartnerID = appsPartnerID || wlpID;\n    Config.referralCode = referralCode;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.js","import ExtendableError from \"extendable-error-class\";\n\nexport class DriveWealthError extends ExtendableError {\n\n}\n\nexport class DriveWealthSessionError extends ExtendableError {\n\n}\n\nexport default {\n    DriveWealthError,\n    DriveWealthSessionError,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Error.js","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ExtendableError).call(this, message));\n\n        _this.name = _this.constructor.name;\n        _this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\nmodule.exports = ExtendableError;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extendable-error-class/dist/index.es5.js\n// module id = 5\n// module chunks = 0","class Sessions {\n    constructor() {\n        this._keys = {};\n        this._mainUser = null;\n    }\n\n    save(userID, sessionKey) {\n        this._keys[userID] = sessionKey;\n        this._mainUser = userID;\n    }\n\n    get(userID) {\n        return this._keys[userID];\n    }\n\n    getAny() {\n        return this._keys[this._mainUser];\n    }\n\n    remove(userID) {\n        delete this._keys[userID];\n    }\n}\n\nexport const sessions = new Sessions();\nexport default sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sessions.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nconst SEC_FEE_RATE = 0.0000231;\nconst SEC_FEE_MIN = 0.01;\nconst SEC_FEE_MAX = Number.POSITIVE_INFINITY;\nconst TAF_FEE_RATE = 0.000119;\nconst TAF_FEE_MIN = 0.01;\nconst TAF_FEE_MAX = 5.95;\n\nexport default class Order {\n\n\tconstructor(data) {\n\t\tfor (let key of [\n\t\t\t\"orderID\",\n\t\t\t\"accountID\",\n\t\t\t\"userID\",\n\t\t\t\"cumQty\",\n\t\t\t\"accountNo\",\n\t\t\t\"comment\",\n\t\t\t\"commission\",\n\t\t\t\"createdByID\",\n\t\t\t\"createdWhen\",\n\t\t\t\"executedWhen\",\n\t\t\t\"grossTradeAmt\",\n\t\t\t\"instrumentID\",\n\t\t\t\"leavesQty\",\n\t\t\t\"orderNo\",\n\t\t\t\"orderQty\",\n\t\t\t\"side\",\n\t\t\t\"autoStop\",\n\t\t\t\"symbol\",\n\t\t\t\"effectivePrice\",\n\t\t]) {\n\t\t\tthis[key] = data[key];\n\t\t}\n\t\tthis.rejectionReason = data.ordRejReason;\n\t\tthis.status = data.ordStatus;\n\t\tthis.type = data.ordType || data.orderType;\n\t\tthis.price = data.stopPrice || data.limitPrice || data.price;\n\t}\n\n\tcancel(cb) {\n\t\trequest({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/orders/${this.orderID}`,\n\t\t\tsessionKey: Sessions.get(this.userID),\n\t\t}, () => {\n\t\t\tcb && cb(null);\n\t\t}, err => cb && cb(err));\n\t}\n\n\tstatic cancel(orderID, userID, cb) {\n\t\trequest({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/orders/${orderID}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}, () => {\n\t\t\tcb && cb(null);\n\t\t}, err => cb && cb(err));\n\t}\n\n\tstatic get SIDES() { return {\n\t\tBUY: \"B\",\n\t\tSELL: \"S\",\n\t} };\n\n\tstatic get TYPES() { return {\n\t\tMARKET: \"1\",\n\t\tLIMIT: \"2\",\n\t\tSTOP: \"3\",\n\t} };\n\n\tstatic get STATUSES() { return {\n\t\tNEW: \"0\",\n\t\tPARTIAL_FILL: \"1\",\n\t\tFILL: \"2\",\n\t\tCANCELED: \"4\",\n\t\tREJECTED: \"8\",\n\t} }\n\n\tstatic getByID(orderID, userID, cb) {\n\t\trequest({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/orders/${orderID}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}, (data) => {\n\t\t\tcb && cb(null, new Order(data));\n\t\t}, err => cb && cb(err));\n\t}\n\n\tstatic create(type, {\n\t\taccountID,\n\t\taccountNo,\n\t\tuserID,\n\t\taccountType,\n\t}, {\n\t\tinstrument,\n\t\tside,\n\t\tqty,\n\t\tamountCash,\n\t\tcomment,\n\t\tautoStop,\n\t\tprice,\n\t\twaitForFill = true,\n\t\tfillRetryInterval = 1000,\n\t\tfillMaxRetries = 10,\n\t}, cb) {\n\t\tif (amountCash && qty) throw new Error(`\"qty\" and \"amountCash\" are mutually exclusive.`);\n\t\tif (type !== Order.TYPES.MARKET && !price) throw new Error(`Limit and stop orders require a \"price.\"`);\n\t\tif (type !== Order.TYPES.MARKET && autoStop) throw new Error(`\"autoStop\" is only allowed for market orders.`);\n\n\t\trequest({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/orders\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {\n\t\t\t\tinstrumentID: instrument.instrumentID || instrument.id || instrument,\n\t\t\t\taccountID,\n\t\t\t\taccountNo,\n\t\t\t\tuserID,\n\t\t\t\taccountType,\n\t\t\t\tordType: type,\n\t\t\t\tside,\n\t\t\t\torderQty: qty ? qty : undefined,\n\t\t\t\tamountCash: amountCash ? amountCash : undefined,\n\t\t\t\tcomment,\n\t\t\t\tautoStop,\n\t\t\t\tprice: type === Order.TYPES.STOP ? price : undefined,\n\t\t\t\tlimitPrice: type === Order.TYPES.LIMIT ? price : undefined,\n\t\t\t},\n\t\t}, (data) => {\n\t\t\tif (type !== Order.TYPES.MARKET) fillMaxRetries = 1;\n\t\t\tif (!waitForFill) return cb && cb(null, data.orderID);\n\n\t\t\tlet retries = fillMaxRetries;\n\t\t\tconst checkStatus = () => {\n\t\t\t\tretries--;\n\t\t\t\tOrder.getByID(data.orderID, userID, (err, order) => {\n\t\t\t\t\tif (err) return cb && cb(err);\n\t\t\t\t\tif (retries <= 0) return cb && cb(null, order);\n\n\t\t\t\t\tif (order.status !== Order.STATUSES.NEW && order.status !== Order.STATUSES.PARTIAL_FILL) {\n\t\t\t\t\t\treturn cb && cb(null, order);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t}, err => cb && cb(err));\n\t}\n\n\tstatic createCart({\n\t\taccountID,\n\t\taccountNo,\n\t\tuserID,\n\t\taccountType,\n\t}, {\n\t\torders,\n\t\twaitForFill = true,\n\t\tfillRetryInterval = 500,\n\t\tfillMaxRetries = 10,\n\t}, cb) {\n\t\trequest({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/orders\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: orders.map(order => ({\n\t\t\t\tinstrumentID: order.instrument.instrumentID || order.instrument.id || order.instrument,\n\t\t\t\taccountID,\n\t\t\t\taccountNo,\n\t\t\t\tuserID,\n\t\t\t\taccountType,\n\t\t\t\tordType: Order.TYPES.MARKET,\n\t\t\t\tside: Order.SIDES.BUY,\n\t\t\t\torderQty: order.qty ? order.qty : undefined,\n\t\t\t\tamountCash: order.amountCash ? order.amountCash : undefined,\n\t\t\t\tcomment: order.comment,\n\t\t\t\tautoStop: order.autoStop,\n\t\t\t})),\n\t\t}, (orderResults) => {\n\t\t\tconst ordersMap = orderResults.reduce(\n\t\t\t\t(acc, next, idx) => {\n\t\t\t\t\treturn Object.assign({}, acc, {\n\t\t\t\t\t\t[orders[idx].referenceID]: next,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t);\n\n\t\t\tif (!waitForFill) return cb && cb(null, ordersMap);\n\n\t\t\tconst filledOrders = [];\n\t\t\tlet retries = fillMaxRetries;\n\t\t\torderResults = orderResults.map((order, idx) => Object.assign({}, order, {\n\t\t\t\treferenceID: orders[idx].referenceID,\n\t\t\t}));\n\t\t\tconst checkStatus = () => {\n\t\t\t\tif (retries <= 0) return cb && cb(null, orderResults);\n\t\t\t\tretries--;\n\n\t\t\t\tPromise.all(\n\t\t\t\t\torderResults.map(order => new Promise((resolve, reject) => {\n\t\t\t\t\t\tOrder.getByID(order.orderID, userID, (error, statusDetails) => {\n\t\t\t\t\t\t\tif (error) return resolve();\n\t\t\t\t\t\t\tordersMap[order.referenceID] = statusDetails;\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t}))\n\t\t\t\t).then(() => {\n\t\t\t\t\tlet shouldRetry = false;\n\t\t\t\t\tfor (let reference in ordersMap) {\n\t\t\t\t\t\tconst thisStatus = ordersMap[reference].status;\n\t\t\t\t\t\tif (!thisStatus\n\t\t\t\t\t\t\t|| thisStatus === Order.STATUSES.NEW\n\t\t\t\t\t\t\t|| thisStatus === Order.STATUSES.PARTIAL_FILL\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tshouldRetry = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (shouldRetry) {\n\t\t\t\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn cb && cb(null, ordersMap);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tsetTimeout(checkStatus, fillRetryInterval);\n\t\t}, err => cb && cb(err));\n\t}\n\n\t// each order is:\n\t// { side, qty, marketPrice, referenceID }\n\t// commission schedule is:\n\t// { baseRate, baseShares, excessRate, fractionalRate, shareAmountRounding, subscription, basketSchedule, passThroughFees }\n\tstatic estimateCommission(orders, commissionSchedule) {\n\t\torders = Array.isArray(orders) ? orders : [orders];\n\t\tlet total = 0;\n\t\tlet totalFeesOnly = 0;\n\t\tlet basketPrice = undefined;\n\n\t\tconst { basketSchedule } = commissionSchedule;\n\t\tif (basketSchedule && basketSchedule.schedule) {\n\t\t\tfor (const scheduleItem of basketSchedule.schedule) {\n\t\t\t\tif (scheduleItem.basketSize === orders.length) {\n\t\t\t\t\tbasketPrice = scheduleItem.basketPrice;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst byOrder = {};\n\t\tfor (const order of orders) {\n\t\t\tconst { qty, marketPrice, side, referenceID } = order;\n\n\t\t\tlet orderPrice = qty < 1\n\t\t\t\t? commissionSchedule.fractionalRate\n\t\t\t\t: commissionSchedule.baseRate;\n\t\t\torderPrice += (\n\t\t\t\t{\n\t\t\t\t\tNEAREST: Math.round,\n\t\t\t\t\tCEIL: Math.ceil,\n\t\t\t\t\tFLOOR: Math.floor,\n\t\t\t\t}[commissionSchedule.shareAmountRounding](\n\t\t\t\t\tMath.max(0, qty - commissionSchedule.baseShares)\n\t\t\t\t) * commissionSchedule.excessRate\n\t\t\t);\n\n\t\t\tlet secFee = 0, tafFee = 0;\n\t\t\tif (commissionSchedule.passThroughFees && side === Order.SIDES.SELL) {\n\t\t\t\ttafFee = qty * marketPrice * TAF_FEE_RATE;\n\t\t\t\ttafFee = Math.min(TAF_FEE_MAX, tafFee);\n\t\t\t\ttafFee = Math.max(TAF_FEE_MIN, tafFee);\n\n\t\t\t\tif (qty >= 1) {\n\t\t\t\t\tsecFee = Math.floor(qty) * marketPrice * SEC_FEE_RATE;\n\t\t\t\t\tsecFee = Math.min(SEC_FEE_MAX, secFee);\n\t\t\t\t\tsecFee = Math.max(SEC_FEE_MIN, secFee);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst orderTotal = orderPrice + secFee + tafFee;\n\t\t\ttotal += orderTotal;\n\t\t\ttotalFeesOnly += secFee + tafFee;\n\n\t\t\tbyOrder[referenceID] = {\n\t\t\t\ttotal: orderTotal,\n\t\t\t\tcommission: orderPrice,\n\t\t\t\tfees: {\n\t\t\t\t\tsec: secFee,\n\t\t\t\t\ttaf: tafFee,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttotal: basketPrice ? (basketPrice + totalFeesOnly) : total,\n\t\t\tmultipleOrderDelta: basketPrice ? (basketPrice - total) : 0,\n\t\t\tbyOrder,\n\t\t};\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Order.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport { Config, HOSTS } from \"./Config\";\n\nexport default class Funding {\n\n    static get ALLOWED_TYPES() { return {\n        DEPOSIT: \"DEPOSIT\",\n        WITHDRAW: \"WITHDRAW\",\n        DEPOSIT_AND_WITHDRAW: \"DEPOSIT_AND_WITHDRAW\",\n    } }\n\n    static getFundingMethods({\n        userID,\n        accountID,\n        language,\n        minAmount,\n        maxAmount,\n        amount,\n        filters = {},\n    } = {}, cb) {\n        if (amount && (minAmount || maxAmount)) throw new Error(`\"amount\" is not compatible with \"minAmount\" or \"maxAmount.\"`);\n\n        let queryString = `partner=${Config.appsPartnerID}&userID=${userID}&accountID=${accountID}`;\n        if (language) queryString += `&language=${language}`;\n        if (minAmount) queryString += `&minAmount=${minAmount}`;\n        if (maxAmount) queryString += `&maxAmount=${maxAmount}`;\n        if (amount) queryString += `&amount=${amount}`;\n        if (filters.name) queryString += `&filter[name]=${filters.name}`;\n        if (filters.country) queryString += `&filter[country]=${filters.country}`;\n        if (filters.currency) queryString += `&filter[currency]=${filters.currency}`;\n        if (filters.allowed) queryString += `&filter[allowed]=${filters.allowed}`;\n\n        request({\n            method: \"GET\",\n            host: HOSTS.APPS,\n            endpoint: `/funding/methods?${queryString}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    static getPastDeposits(userID, cb) {\n        request({\n            endpoint: `/funding/status`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data.data);\n        }, err => cb && cb(err));\n    }\n\n\tstatic getPricing (userID, cb) {\n\t\treturn request({\n\t\t\tendpoint: \"/funding/ach/subscription-plans\",\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t}, data => {\n\t\t\tconst pricing = data.data.map(function (pricing) {\n\t\t\t\treturn [].concat(pricing)\n\t\t\t\t.sort((x, y) => x.amount - y.amount)\n\t\t\t\t.map(price => Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\tprice,\n\t\t\t\t\t{ amount: Number(price.amount / 100) },\n\t\t\t\t));\n\t\t\t})[0];\n\n\t\t\tcb && cb(null, pricing);\n\t\t}, err => cb && cb(err));\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Funding.js","import request from \"./request\";\nimport { Config, HOSTS } from \"./Config\";\nimport Sessions from \"./Sessions\";\n\nexport default class Reports {\n\n    static getTransactions(userID, accountNo, startDate, endDate, cb) {\n        const queryString =\n            `?sessionKey=${Sessions.get(userID)}`\n            + `&ReportName=FinTrans`\n            + `&ReportFormat=JSON`\n            + `&AccountNumber=${accountNo}`\n            + `&DateStart=${startDate.toISOString()}`\n            + `&DateEnd=${endDate.toISOString()}`\n            + `&wlpID=${Config.wlpID}`\n            + `&LanguageID=en_US`;\n\n        request({\n            method: \"POST\",\n            host: HOSTS.REPORTS,\n            endpoint: `/DriveWealth${queryString}`,\n            sessionKey: Sessions.get(userID),\n            body: {},\n        }, (data) => {\n            cb && cb(null, data.transaction || []);\n        }, err => cb && cb(err));\n    }\n\n    static getPlacedOrders(userID, accountNo, startDate, endDate, cb) {\n        const queryString =\n            `?sessionKey=${Sessions.get(userID)}`\n            + `&ReportName=OrderTrans`\n            + `&ReportFormat=JSON`\n            + `&AccountNumber=${accountNo}`\n            + `&DateStart=${startDate.toISOString()}`\n            + `&DateEnd=${endDate.toISOString()}`\n            + `&wlpID=${Config.wlpID}`\n            + `&LanguageID=en_US`;\n\n        request({\n            method: \"POST\",\n            host: HOSTS.REPORTS,\n            endpoint: `/DriveWealth${queryString}`,\n            sessionKey: Sessions.get(userID),\n            body: {},\n        }, (data) => {\n            cb && cb(null, data.transaction);\n        }, err => cb && cb(err));\n    }\n\n    static getStatements(userID, accountID, startDate, endDate, cb) {\n        const queryString =\n            `?accountID=${accountID}`\n            + `&dateStart=${startDate.toISOString()}`\n            + `&dateEnd=${endDate.toISOString()}`\n            + `&type=02`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/statements${queryString}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    static getTradeConfirms(userID, accountID, startDate, endDate, cb) {\n        const queryString =\n            `?accountID=${accountID}`\n            + `&dateStart=${startDate.toISOString()}`\n            + `&dateEnd=${endDate.toISOString()}`\n            + `&type=01`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/statements${queryString}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    static getTaxDocuments(userID, accountID, startDate, endDate, cb) {\n        const queryString =\n            `?accountID=${accountID}`\n            + `&dateStart=${startDate.toISOString()}`\n            + `&dateEnd=${endDate.toISOString()}`\n            + `&type=03`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/statements${queryString}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    static generateDownloadURL(userID, accountID, fileKey, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/statements/${accountID}/${fileKey}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data.url);\n        }, err => cb && cb(err));\n    }\n\n    static getSupportedCountries(cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/countries`,\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Reports.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport default class Instrument {\n\n    constructor(data) {\n        for (let key of [\n            \"instrumentID\",\n            \"name\",\n            \"exchangeID\",\n            \"instrumentTypeID\",\n            \"orderSizeMax\",\n            \"orderSizeMin\",\n            \"orderSizeStep\",\n            \"rateAsk\",\n            \"rateBid\",\n            \"ratePrecision\",\n            \"symbol\",\n            \"tradeStatus\",\n            \"urlImage\",\n            \"urlInvestor\",\n            \"chaikinPgr\",\n            \"priorClose\",\n            \"marketState\",\n            \"fundamentalDataModel\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    static get TRADE_STATUSES() { return {\n        INACTIVE: \"0\",\n        ACTIVE: \"1\",\n        CLOSED: \"2\",\n    } }\n\n    static get CHART_COMPRESSIONS() { return {\n        DAY: 0,\n        MINUTE_1: 1,\n        MINUTE_5: 4,\n        MINUTE_30: 8,\n        HOUR: 9,\n        WEEK: 10\n    } }\n\n    static getBySymbol(symbol, cb) {\n        let symbols = symbol;\n        if (typeof symbol === \"string\") symbols = [symbol];\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments?symbols=${symbols.join(',')}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            data = data.map(ins => new Instrument(ins));\n            cb && cb(null, typeof symbol === \"string\" ? data[0] : data);\n        }, err => cb && cb(err));\n    }\n\n    static getByID(id, includeFundamentals = true, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/instruments/${id}${includeFundamentals ? '?options=F' : ''}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, new Instrument(data));\n        }, err => cb && cb(err));\n    }\n\n    static getAll(tradeStatus, cb) {\n        if (!cb) {\n            cb = tradeStatus;\n            tradeStatus = \"-1\";\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments?tradeStatus=${tradeStatus}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.map(ins => new Instrument(ins)));\n        }, err => cb && cb(err));\n    }\n\n    static search(criteria, cb) {\n        let queryString = \"?\";\n        if (criteria.symbol) queryString += `symbol=${criteria.symbol}&`;\n        if (criteria.name) queryString += `name=${criteria.name}&`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments${queryString}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.map(ins => new Instrument(ins)));\n        }, err => cb && cb(err));\n    }\n\n    getQuote(cb) {\n        return Instrument.getQuote(this.symbol, cb);\n    }\n\n    static getQuote(symbol, cb) {\n        let userPassedOneSymbol = false;\n        if (!Array.isArray(symbol)) {\n            userPassedOneSymbol = true;\n            symbol = [symbol];\n        }\n        symbol = symbol.map(sym => {\n            return sym instanceof Instrument ? sym.symbol : sym;\n        });\n\n        request({\n            method: \"GET\",\n            endpoint: `/quotes?symbols=${symbol.join(\",\")}`,\n            sessionKey: Sessions.getAny(),\n            addlHeaders: {\n                \"Accept\": \"text/plain\"\n            }\n        }, (data) => {\n            let obj = {};\n            data = data.split(\"|\").slice(10);\n            for (let rawQuote of data) {\n                const parsedQuote = rawQuote.split(\",\");\n                obj[parsedQuote[0]] = {\n                    bid: Number(parsedQuote[1]),\n                    ask: Number(parsedQuote[2]),\n                };\n            }\n            if (userPassedOneSymbol) obj = obj[symbol[0]];\n            cb && cb(null, obj);\n        }, err => cb && cb(err));\n    }\n\n    getChartData() {\n        if (arguments.length === 4) {\n            return Instrument.getChartData(this.instrumentID, arguments[0], arguments[1], arguments[2], arguments[3]);\n        } else {\n            return Instrument.getChartData(this.instrumentID, arguments[0], arguments[1], arguments[2]);\n        }\n    }\n\n    static getChartData(instrumentID, compression) {\n        let cb, timeParams;\n        if (arguments.length === 5) {\n            const dateStart = arguments[2].toISOString().replace(/\\.\\d{3}/, \"\");\n            const dateEnd   = arguments[3].toISOString().replace(/\\.\\d{3}/, \"\");\n            timeParams = `dateStart=${dateStart}&dateEnd=${dateEnd}`;\n            cb = arguments[4];\n        } else {\n            timeParams = `tradingDays=${arguments[2]}`;\n            cb = arguments[3];\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/bars?instrumentID=${instrumentID}&compression=${compression}&${timeParams}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.data.split(\"|\"));\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js","import request from \"./request\";\nimport { Config } from \"./Config\";\nimport Sessions from \"./Sessions\";\nimport Account from \"./Account\";\n\nexport default class User {\n\n    constructor(data) {\n\t\tfor (let key of [\n            \"countryID\",\n            \"emailAddress\",\n            \"firstName\",\n            \"languageID\",\n            \"lastName\",\n            \"phoneNumber\",\n            \"referralCode\",\n            \"userID\",\n            \"username\",\n            \"wlpID\",\n            \"status\",\n            \"usCitizen\",\n            \"lastLoginWhen\",\n            \"citizenship\",\n\t\t\t\"addressLine1\",\n\t\t\t\"addressLine2\",\n\t\t\t\"city\",\n\t\t\t\"stateProvince\",\n\t\t\t\"zipPostalCode\",\n        ]) {\n            this[key] = data[key];\n        }\n        \n        this.fullName = data.firstName + \" \" + data.lastName;\n\t}\n\n    getAccounts(cb) {\n        return Account.getListForUserID(this.userID, cb);\n    }\n\n\tuploadDocument(file, type, cb) {\n        return User.uploadDocument(this.userID, file, type, cb);\n    }\n\n    // getSettings(userID, cb)\n    // getSettings(userID, key, cb)\n\tstatic getSettings(userID, key, cb) {\n    \tif (!cb) {\n\t\t\t// callback becomes second arg when it's undefined\n\t\t\t_getAllSettings(userID, key);\n\t\t} else {\n\t\t\t_getSettings(userID, key, cb)\n\t\t}\n    }\n\n\t// getSettings(key, cb)\n\t// getSettings(cb)\n    getSettings() {\n    \tconst [ key, cb ] = arguments;\n\n\t\tif (arguments.length === 1) {\n\t\t\t// callback becomes second arg when it's undefined\n\t\t\t_getAllSettings(this.userID, key);\n\t\t} else {\n\t\t\t_getSettings(this.userID, key, cb);\n\t\t}\n\t}\n\n\tstatic setSetting(userID, key, value, cb) {\n    \t_setSetting(userID, key, value, cb);\n\t}\n\n    setSetting(key, value, cb) {\n    \t_setSetting(this.userID, key, value, cb);\n    }\n\n    unsetSetting(key, cb) {\n        request({\n            method: \"DELETE\",\n            endpoint: `/users/${this.userID}/settings/${key}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    getStatus(cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/status`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    logout() {\n        request({\n            method: \"DELETE\",\n            endpoint: `/userSessions/${Sessions.get(this.userID)}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            Sessions.remove(this.userID);\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    static get STATUSES() { return {\n        PENDING: 1,\n        APPROVED: 2,\n        REJECTED: 3,\n        REVOKED: 4,\n        CLOSED: 5,\n    } }\n\n    static getByUserID(userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${userID}`,\n            sessionKey: Sessions.get(userID)\n        }, (data) => {\n            cb && cb(null, new User(data));\n        }, err => cb && cb(err));\n    }\n\n    static login(username, password, cb) {\n        request({\n            method: \"POST\",\n            endpoint: \"/userSessions\",\n            body: {\n                username,\n                password,\n                appTypeID: Config.appTypeID,\n                appVersion: Config.appVersion,\n                languageID: \"en_US\",\n                osType: \"unknown\",\n                osVersion: \"unknown\",\n                scrRes: \"unknown\",\n                ipAddress: \"unknown\"\n            }\n        }, (data) => {\n            Sessions.save(data.userID, data.sessionKey);\n            User.getByUserID(data.userID, (err, user) => {\n                if (err) return cb && cb(err);\n                cb && cb(null, user);\n            });\n        }, err => cb && cb(err));\n    }\n\n    static isUsernameAvailable(username, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users?username=${username}`,\n        }, () => {\n            cb && cb(null, false);\n        }, (err, statusCode) => {\n            if (statusCode === 404) return cb && cb(null, true);\n            cb && cb(err);\n        });\n    }\n\n    static create({\n        username,\n        password,\n        firstName,\n        lastName,\n        email,\n        languageID,\n        referralCode = Config.referralCode,\n        utmCampaign,\n        utmContent,\n        utmMedium,\n        utmSource,\n        utmTerm,\n    }, loginAutomatically = true, cb) {\n        if (!cb) {\n            cb = loginAutomatically;\n            loginAutomatically = true;\n        }\n\n        request({\n            method: \"POST\",\n            endpoint: \"/signups/live\",\n            body: {\n                username,\n                password,\n                firstName,\n                lastName,\n                emailAddress1: email,\n                languageID,\n                wlpID: Config.wlpID,\n                referralCode,\n                utmCampaign,\n                utmContent,\n                utmMedium,\n                utmSource,\n                utmTerm,\n            },\n        }, (data) => {\n            if (loginAutomatically) {\n                return User.login(username, password, cb);\n            } else {\n                cb && cb(null, data);\n            }\n        }, err => cb && cb(err));\n    }\n\n\tstatic update({\n\t\tuserID,\n\t\taddressLine1,\n\t\taddressLine2,\n\t\tcity,\n\t\tcountryID,\n\t\temail,\n\t\tfirstName,\n\t\tlastName,\n\t\tlanguageID,\n\t\tphoneHome,\n\t\tphoneWork,\n\t\tphone,\n\t\tstateProvince,\n\t\tzipPostalCode\n\t}, cb) {\n\t\treturn request({\n\t\t\tmethod: \"PUT\",\n\t\t\tendpoint: `/users/${userID}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {\n\t\t\t\taddressLine1,\n\t\t\t\taddressLine2,\n\t\t\t\tcity,\n\t\t\t\tcountryID,\n\t\t\t\temailAddress1: email,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\tlanguageID,\n\t\t\t\tphoneHome,\n\t\t\t\tphoneWork,\n\t\t\t\tphoneMobile: phone,\n\t\t\t\tstateProvince,\n\t\t\t\tzipPostalCode\n\t\t\t},\n\t\t}, data => {\n\t\t\tcb && cb(null, data);\n\t\t}, err => cb && cb(err));\n\t}\n\n\tstatic get DOCUMENT_TYPES() { return {\n        PHOTO_ID: \"Picture ID\",\n\t\tPROOF_OF_ADDRESS: \"Proof of address\",\n\t\tPHOTO_ID_WITH_PROOF_OF_ADDRESS: \"Picture ID_Proof of address\",\n    } }\n\n\tstatic uploadDocument(userID, file, type, cb) {\n\t\tconst body = new FormData();\n\t\tbody.append(\"token\", userID);\n\t\tbody.append(\"documentType\", type);\n\t\tbody.append(\"documentImage\", file);\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: `/documents`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\taddlHeaders: {\n\t\t\t\t\"Content-Type\": \"multipart/form-data\",\n\t\t\t},\n\t\t\tbody,\n\t\t}, data => {\n\t\t\tcb && cb(null, data);\n\t\t}, err => cb && cb(err));\n\t}\n\t\n\tlistCreditCards(cb) {\n    \treturn _listCreditCards(this.userID, cb);\n\t}\n\t\n\tstatic listCreditCards(userID, cb) {\n    \treturn _listCreditCards(userID, cb);\n\t}\n\t\n\taddCreditCard(cardToken, cb) {\n\t\treturn _addCreditCard(this.userID, cardToken, cb);\n\t}\n\t\n\tstatic addCreditCard(userID, cardToken, cb) {\n\t\treturn _addCreditCard(userID, cardToken, cb);\n\t}\n\t\n\tremoveCreditCard(cardID, cb) {\n \t\treturn _removeCreditCard(this.userID, cardID, cb);\n\t}\n\t\n\tstatic removeCreditCard(userID, cardID, cb) {\n\t\treturn _removeCreditCard(userID, cardID, cb);\n\t}\n}\n\nfunction _listCreditCards(userID, cb) {\n\treturn request({\n\t\tmethod: \"GET\",\n\t\tendpoint: `/users/${userID}/credit-cards`,\n\t\tsessionKey: Sessions.get(userID)\n\t}, data => {\n\t\tcb && cb(null, data);\n\t}, err => cb && cb(err));\n}\n\nfunction _addCreditCard(userID, cardToken, cb) {\n\treturn request({\n\t\tmethod: \"POST\",\n\t\tendpoint: `/users/${userID}/credit-cards`,\n\t\tsessionKey: Sessions.get(userID),\n\t\tbody: { cardToken }\n\t}, data => {\n\t\tcb && cb(null, data);\n\t}, err => cb && cb(err));\n}\n\nfunction _removeCreditCard(userID, cardID, cb) {\n\treturn request({\n\t\tmethod: \"DELETE\",\n\t\tendpoint: `/users/${userID}/credit-cards/${cardID}`,\n\t\tsessionKey: Sessions.get(userID)\n\t}, data => {\n\t\tcb && cb(null, data);\n\t}, err => cb && cb(err));\n}\n\nfunction _getSettings (userID, key, cb) {\n\trequest({\n\t\tmethod: \"GET\",\n\t\tendpoint: `/users/${userID}/settings/${key}`,\n\t\tsessionKey: Sessions.get(userID),\n\t}, (data) => {\n\t\tcb && cb(null, data.value);\n\t}, err => cb && cb(err));\n}\n\nfunction _getAllSettings (userID, cb) {\n\trequest({\n\t\tmethod: \"GET\",\n\t\tendpoint: `/users/${userID}/settings`,\n\t\tsessionKey: Sessions.get(userID),\n\t}, (data) => {\n\t\tlet formattedData = {};\n\t\tfor (let setting of data) {\n\t\t\tformattedData[setting.key] = setting.value;\n\t\t}\n\t\tcb && cb(null, formattedData);\n\t}, err => cb && cb(err));\n}\n\nfunction _setSetting (userID, key, value, cb) {\n\trequest({\n\t\tmethod: \"POST\",\n\t\tendpoint: `/users/${userID}/settings`,\n\t\tsessionKey: Sessions.get(userID),\n\t\tbody: {\n\t\t\tkey, value,\n\t\t},\n\t}, () => {\n\t\tcb && cb(null);\n\t}, err => cb && cb(err));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/User.js"]}