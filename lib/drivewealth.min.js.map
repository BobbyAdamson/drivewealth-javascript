{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap a9f0df7d913884f95bea","webpack:///src/index.js","webpack:///src/Account.js","webpack:///src/request.js","webpack:///src/Config.js","webpack:///src/Error.js","webpack:///~/extendable-error-class/dist/index.es5.js","webpack:///src/Sessions.js","webpack:///src/Order.js","webpack:///src/Funding.js","webpack:///src/Reports.js","webpack:///src/Instrument.js","webpack:///src/User.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","_Account","_Error","_Funding","_Instrument","_Order","_Reports","_User","_Sessions","_Config","_request","ENVIRONMENTS","Account","Error","Funding","Instrument","Order","Reports","User","Sessions","setup","request","data","_classCallCheck","_arr","_i","length","key","type","cb","_request2","default","method","endpoint","userID","accountID","sessionKey","_Sessions2","get","err","queryString","arguments","_arguments","Array","prototype","slice","startDate","getFullYear","getMonth","getDate","performance","parentDetails","accountNo","accountType","_Order2","create","undefined","_Funding2","getFundingMethods","endDate","_Reports2","getTransactions","getPlacedOrders","getStatements","getTaxDocuments","getTradeConfirms","fileKey","generateDownloadURL","map","account","TYPES","PRACTICE","responseType","tranAmount","body","CASH","ORDERS","TRANSACTIONS","POSITIONS","ALL","PENDING","OPEN","OPEN_NO_NEW_TRADES","CLOSED","LIVE","_ref","onSuccess","onError","_ref$method","_ref$addlHeaders","addlHeaders","_ref$host","host","HOSTS","API","headers","Accept","header","Config","env","JSON","stringify","httpImpl","statusCode","resHeaders","resBody","contentType","indexOf","parse","String","error","errorMessage","message","DriveWealthSessionError","DriveWealthError","appTypeID","appVersion","_ref$wlpID","wlpID","referralCode","APPS","REPORTS","UAT","_defineProperty","_UAT","PROD","_PROD","_extendableErrorClass","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","Object","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_extendableBuiltin","cls","ExtendableBuiltin","Reflect","construct","from","getPrototypeOf","ExtendableError","_extendableBuiltin2","_this","name","captureStackTrace","stack","_keys","_mainUser","sessions","rejectionReason","ordRejReason","status","ordStatus","ordType","orderID","instrument","_ref2","side","qty","amountCash","comment","autoStop","price","_ref2$waitForFill","waitForFill","_ref2$fillRetryInterv","fillRetryInterval","_ref2$fillMaxRetries","fillMaxRetries","MARKET","instrumentID","orderQty","STOP","limitPrice","LIMIT","checkStatus","getByID","order","STATUSES","NEW","PARTIAL_FILL","setTimeout","BUY","SELL","FILL","CANCELED","REJECTED","language","minAmount","maxAmount","amount","_ref$filters","filters","country","currency","allowed","DEPOSIT","WITHDRAW","DEPOSIT_AND_WITHDRAW","toISOString","transaction","url","getQuote","symbol","getChartData","symbols","join","getAny","ins","includeFundamentals","tradeStatus","criteria","userPassedOneSymbol","isArray","sym","obj","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","rawQuote","parsedQuote","bid","Number","ask","return","compression","timeParams","dateStart","replace","dateEnd","INACTIVE","ACTIVE","DAY","MINUTE_1","MINUTE_5","MINUTE_30","HOUR","WEEK","_Account2","getListForUserID","getAllSettings","formattedData","setting","remove","username","password","languageID","osType","osVersion","scrRes","ipAddress","save","getByUserID","user","firstName","lastName","email","_ref$referralCode","utmCampaign","utmContent","utmMedium","utmSource","utmTerm","loginAutomatically","emailAddress1","login","addressLine1","addressLine2","city","countryID","phoneHome","phoneWork","phone","stateProvince","zipPostalCode","phoneMobile","APPROVED","REVOKED"],"mappings":"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","file":"drivewealth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drivewealth\"] = factory();\n\telse\n\t\troot[\"drivewealth\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a9f0df7d913884f95bea","import Account from \"./Account\";\nimport Error from \"./Error\";\nimport Funding from \"./Funding\";\nimport Instrument from \"./Instrument\";\nimport Order from \"./Order\";\nimport Reports from \"./Reports\";\nimport User from \"./User\";\nimport Sessions from \"./Sessions\";\nimport { setup, ENVIRONMENTS } from \"./Config\";\nimport request from \"./request\";\n\nexport default {\n    ENVIRONMENTS,\n\n    Account,\n    Error,\n    Funding,\n    Instrument,\n    Order,\n    Reports,\n    User,\n    Sessions,\n\n    setup,\n    request,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport Order from \"./Order\";\nimport Funding from \"./Funding\";\nimport Reports from \"./Reports\";\n\nexport default class Account {\n\n    constructor(data) {\n        for (let key of [\n            \"accountID\",\n            \"userID\",\n            \"accountNo\",\n            \"accountType\",\n            \"currencyID\",\n            \"ibID\",\n            \"margin\",\n            \"nickname\",\n            \"openedWhen\",\n            \"patternDayTrades\",\n            \"status\",\n            \"tradingType\",\n            \"accountMgmtType\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    getBlotter(type, cb) {\n        if (type && !cb) {\n            cb = type;\n            type = null;\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/accountSummary/${this.accountID}${type ? '/' + type : \"\"}`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, type ? data[type] : data);\n        }, err => cb && cb(err));\n    }\n\n    // getPerformance(startDate, endDate, cb)\n    // getPerformance(period, cb)\n    // getPerformance(cb)\n    getPerformance() {\n        let queryString = \"\";\n        let cb;\n        if (arguments.length === 3) {\n            cb = arguments[2];\n            const [ startDate, endDate ] = arguments;\n            queryString += \"/dateRange?\";\n            queryString += `startDate=${startDate.getFullYear()}${startDate.getMonth() + 1}${startDate.getDate()}`;\n            queryString +=  `&endDate=${startDate.getFullYear()}${startDate.getMonth() + 1}${startDate.getDate()}`;\n        } else if (arguments.length === 2) {\n            cb = arguments[1];\n            queryString += `/history?period=${arguments[0]}`;\n        } else {\n            cb = arguments[0];\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/accountPerformance/${this.accountID}${queryString}`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data.performance);\n        }, err => cb && cb(err));\n    }\n\n    placeOrder(type, data, cb) {\n        const parentDetails = {\n            accountID: this.accountID,\n            accountNo: this.accountNo,\n            accountType: this.accountType,\n            userID: this.userID,\n        };\n\n        return Order.create(type, parentDetails, data, cb);\n    }\n\n    getFundingMethods(data = {}, cb) {\n        data.userID = this.userID;\n        data.accountID = this.accountID;\n        return Funding.getFundingMethods(data, cb);\n    }\n\n    getTransactions(startDate, endDate, cb) {\n        return Reports.getTransactions(this.userID, this.accountNo, startDate, endDate, cb);\n    }\n\n    getPlacedOrders(startDate, endDate, cb) {\n        return Reports.getPlacedOrders(this.userID, this.accountNo, startDate, endDate, cb);\n    }\n\n    getStatements(startDate, endDate, cb) {\n        return Reports.getStatements(this.userID, this.accountID, startDate, endDate, cb);\n    }\n\n    getTaxDocuments(startDate, endDate, cb) {\n        return Reports.getTaxDocuments(this.userID, this.accountID, startDate, endDate, cb);\n    }\n\n    getTradeConfirms(startDate, endDate, cb) {\n        return Reports.getTradeConfirms(this.userID, this.accountID, startDate, endDate, cb);\n    }\n\n    generateDownloadURL(fileKey, cb) {\n        return Reports.generateDownloadURL(this.userID, this.accountID, fileKey, cb);\n    }\n\n    static get BLOTTER_TYPES() { return {\n        CASH: \"cash\",\n        ORDERS: \"orders\",\n        TRANSACTIONS: \"transactions\",\n        POSITIONS: \"positions\",\n        ALL: null,\n    } };\n\n    static get STATUSES() { return {\n        PENDING: 1,\n        OPEN: 2,\n        OPEN_NO_NEW_TRADES: 3,\n        CLOSED: 9,\n    } };\n\n    static get TYPES() { return {\n        PRACTICE: 1,\n        LIVE: 2,\n    } };\n\n    static getListForUserID(userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${userID}/accounts`,\n            sessionKey: Sessions.get(userID)\n        }, (data) => {\n            cb && cb(null, data.map(account => new Account(account)));\n        }, err => cb && cb(err));\n    }\n\n    static create(userID, type, data, cb) {\n        if (type === Account.TYPES.PRACTICE) {\n            data = {\n                userID,\n                responseType: \"full\",\n                tranAmount: data,\n            };\n        }\n\n        request({\n            method: \"POST\",\n            endpoint: type === Account.TYPES.PRACTICE\n                ? `/signups/practice`\n                : `/signups/live`,\n            sessionKey: Sessions.get(userID),\n            body: data,\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Account.js","import { Config, HOSTS } from \"./Config\";\nimport { DriveWealthError, DriveWealthSessionError } from \"./Error\";\n\nexport default function request({\n    method = \"GET\",\n    endpoint,\n    sessionKey,\n    body,\n    addlHeaders = {},\n    host = HOSTS.API,\n}, onSuccess, onError) {\n    let headers = {\n        Accept: \"application/json\"\n    };\n    if (method === \"POST\" || method === \"PUT\" || method === \"PATCH\") {\n        headers[\"Content-Type\"] = \"application/json\";\n    }\n    if (sessionKey) {\n        headers[\"x-mysolomeo-session-key\"] = sessionKey;\n    }\n    for (let header in addlHeaders) {\n        headers[header] = addlHeaders[header];\n    }\n\n    endpoint = Config.env[host] + endpoint;\n\n    if (headers[\"Content-Type\"] === \"application/json\") body = JSON.stringify(body);\n\n    Config.httpImpl(method, endpoint, headers, body, (statusCode, resHeaders, resBody) => {\n        const contentType = resHeaders[\"Content-Type\"] || resHeaders[\"content-type\"] || \"\";\n        if (resBody && contentType.indexOf(\"application/json\") !== -1) {\n            try {\n                resBody = JSON.parse(resBody);\n            } catch (err) {\n                // resBody will remain as is\n            }\n        }\n\n        if (String(statusCode)[0] === \"2\" || String(statusCode)[0] === \"3\") {\n            onSuccess(resBody, statusCode, resHeaders);\n        } else {\n            let error, errorMessage;\n            if (resBody) {\n                errorMessage = resBody.message || JSON.stringify(resBody);\n            }\n            error = statusCode == 401 ? new DriveWealthSessionError(errorMessage) : new DriveWealthError(errorMessage);\n            onError(error, resBody, statusCode, resHeaders);\n        }\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/request.js","export const Config = {\n    env: null,\n    httpImpl: null,\n    appTypeID: null,\n    appVersion: null,\n    wlpID: null,\n    referralCode: null,\n};\n\nexport const HOSTS = {\n    API: \"api\",\n    APPS: \"apps\",\n    REPORTS: \"reports\"\n};\n\nexport const ENVIRONMENTS = {\n    UAT: {\n        [HOSTS.API]: \"http://api.drivewealth.io/v1\",\n        [HOSTS.APPS]: \"http://apps.drivewealth.io/\",\n        [HOSTS.REPORTS]: \"http://reports.drivewealth.io/\",\n    },\n    PROD: {\n        [HOSTS.API]: \"https://api.drivewealth.net/v1\",\n        [HOSTS.APPS]: \"https://apps.drivewealth.com/\",\n        [HOSTS.REPORTS]: \"https://reports.drivewealth.com\",\n    },\n};\n\nexport function setup({\n    env,\n    httpImpl,\n    appTypeID,\n    appVersion,\n    wlpID = \"DW\",\n    referralCode,\n}) {\n    Config.env = env;\n    Config.httpImpl = httpImpl;\n    Config.appTypeID = appTypeID;\n    Config.appVersion = appVersion;\n    Config.wlpID = wlpID;\n    Config.referralCode = referralCode;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Config.js","import ExtendableError from \"extendable-error-class\";\n\nexport class DriveWealthError extends ExtendableError {\n\n}\n\nexport class DriveWealthSessionError extends ExtendableError {\n\n}\n\nexport default {\n    DriveWealthError,\n    DriveWealthSessionError,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Error.js","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ExtendableError).call(this, message));\n\n        _this.name = _this.constructor.name;\n        _this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\nmodule.exports = ExtendableError;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extendable-error-class/dist/index.es5.js\n// module id = 5\n// module chunks = 0","class Sessions {\n    constructor() {\n        this._keys = {};\n        this._mainUser = null;\n    }\n\n    save(userID, sessionKey) {\n        this._keys[userID] = sessionKey;\n        if (!this._mainUser) this._mainUser = userID;\n    }\n\n    get(userID) {\n        return this._keys[userID];\n    }\n\n    getAny() {\n        return this._keys[this._mainUser];\n    }\n\n    remove(userID) {\n        delete this._keys[userID];\n    }\n}\n\nexport const sessions = new Sessions();\nexport default sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sessions.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport default class Order {\n\n    constructor(data) {\n        for (let key of [\n            \"orderID\",\n            \"accountID\",\n            \"userID\",\n            \"cumQty\",\n            \"accountNo\",\n            \"comment\",\n            \"commission\",\n            \"createdByID\",\n            \"createdWhen\",\n            \"executedWhen\",\n            \"grossTradeAmt\",\n            \"instrumentID\",\n            \"leavesQty\",\n            \"orderNo\",\n            \"orderQty\",\n            \"side\",\n            \"autoStop\",\n        ]) {\n            this[key] = data[key];\n        }\n        this.rejectionReason = data.ordRejReason;\n        this.status = data.ordStatus;\n        this.type = data.ordType;\n    }\n\n    cancel(cb) {\n        request({\n            method: \"DELETE\",\n            endpoint: `/orders/${this.orderID}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    static get SIDES() { return {\n        BUY: \"B\",\n        SELL: \"S\",\n    } };\n\n    static get TYPES() { return {\n        MARKET: \"1\",\n        LIMIT: \"2\",\n        STOP: \"3\",\n    } };\n\n    static get STATUSES() { return {\n        NEW: \"0\",\n        PARTIAL_FILL: \"1\",\n        FILL: \"2\",\n        CANCELED: \"4\",\n        REJECTED: \"8\",\n    } }\n\n    static getByID(orderID, userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/orders/${orderID}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, new Order(data));\n        }, err => cb && cb(err));\n    }\n\n    static create(type, {\n        accountID,\n        accountNo,\n        userID,\n        accountType,\n    }, {\n        instrument,\n        side,\n        qty,\n        amountCash,\n        comment,\n        autoStop,\n        price,\n        waitForFill = true,\n        fillRetryInterval = 500,\n        fillMaxRetries = 10,\n    }, cb) {\n        if (amountCash && qty) throw new Error(`\"qty\" and \"amountCash\" are mutually exclusive.`);\n        if (type !== Order.TYPES.MARKET && !price) throw new Error(`Limit and stop orders require a \"price.\"`);\n        if (type !== Order.TYPES.MARKET && autoStop) throw new Error(`\"autoStop\" is only allowed for market orders.`);\n\n        request({\n            method: \"POST\",\n            endpoint: \"/orders\",\n            sessionKey: Sessions.get(userID),\n            body: {\n                instrumentID: instrument.instrumentID || instrument.id || instrument,\n                accountID,\n                accountNo,\n                userID,\n                accountType,\n                ordType: type,\n                side,\n                orderQty: qty ? qty : undefined,\n                amountCash: amountCash ? amountCash : undefined,\n                comment,\n                autoStop,\n                price: type === Order.TYPES.STOP ? price : undefined,\n                limitPrice: type === Order.TYPES.LIMIT ? price : undefined,\n            },\n        }, (data) => {\n            if (!Order.TYPES.MARKET || !waitForFill) return cb && cb(null, data.orderID);\n\n            let poll, retries = fillMaxRetries;\n            const checkStatus = () => {\n                fillMaxRetries--;\n                Order.getByID(data.orderID, userID, (err, order) => {\n                    if (err) return cb && cb(err);\n                    if (fillMaxRetries <= 0) return cb && cb(null, order);\n\n                    if (order.status !== Order.STATUSES.NEW && order.status !== Order.STATUSES.PARTIAL_FILL) {\n                        return cb && cb(null, order);\n                    } else {\n                        setTimeout(checkStatus, fillRetryInterval);\n                    }\n                });\n            };\n            setTimeout(checkStatus, fillRetryInterval);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Order.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\nimport { Config, HOSTS } from \"./Config\";\n\nexport default class Funding {\n\n    static get ALLOWED_TYPES() { return {\n        DEPOSIT: \"DEPOSIT\",\n        WITHDRAW: \"WITHDRAW\",\n        DEPOSIT_AND_WITHDRAW: \"DEPOSIT_AND_WITHDRAW\",\n    } }\n\n    static getFundingMethods({\n        userID,\n        accountID,\n        language,\n        minAmount,\n        maxAmount,\n        amount,\n        filters = {},\n    } = {}, cb) {\n        if (amount && (minAmount || maxAmount)) throw new Error(`\"amount\" is not compatible with \"minAmount\" or \"maxAmount.\"`);\n\n        let queryString = `partner=${Config.wlpID}&userID=${userID}&accountID=${accountID}`;\n        if (language) queryString += `&language=${language}`;\n        if (minAmount) queryString += `&minAmount=${minAmount}`;\n        if (maxAmount) queryString += `&maxAmount=${maxAmount}`;\n        if (amount) queryString += `&amount=${amount}`;\n        if (filters.name) queryString += `&filter[name]=${filters.name}`;\n        if (filters.country) queryString += `&filter[country]=${filters.country}`;\n        if (filters.currency) queryString += `&filter[currency]=${filters.currency}`;\n        if (filters.allowed) queryString += `&filter[allowed]=${filters.allowed}`;\n\n        request({\n            method: \"GET\",\n            host: HOSTS.APPS,\n            endpoint: `/funding/methods?${queryString}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    static getPastDeposits(userID, cb) {\n        request({\n            endpoint: `/funding/status`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data.data);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Funding.js","import request from \"./request\";\nimport { Config, HOSTS } from \"./Config\";\nimport Sessions from \"./Sessions\";\n\nexport default class Reports {\n\n    static getTransactions(userID, accountNo, startDate, endDate, cb) {\n        const queryString =\n            `?sessionKey=${Sessions.get(userID)}`\n            + `&ReportName=FinTrans`\n            + `&ReportFormat=JSON`\n            + `&AccountNumber=${accountNo}`\n            + `&DateStart=${startDate.toISOString()}`\n            + `&DateEnd=${endDate.toISOString()}`\n            + `&wlpID=${Config.wlpID}`\n            + `&LanguageID=en_US`;\n\n        request({\n            method: \"POST\",\n            host: HOSTS.REPORTS,\n            endpoint: `/DriveWealth${queryString}`,\n            sessionKey: Sessions.get(userID),\n            body: {},\n        }, (data) => {\n            cb && cb(null, data.transaction);\n        }, err => cb && cb(err));\n    }\n\n    static getPlacedOrders(userID, accountNo, startDate, endDate, cb) {\n        const queryString =\n            `?sessionKey=${Sessions.get(userID)}`\n            + `&ReportName=OrderTrans`\n            + `&ReportFormat=JSON`\n            + `&AccountNumber=${accountNo}`\n            + `&DateStart=${startDate.toISOString()}`\n            + `&DateEnd=${endDate.toISOString()}`\n            + `&wlpID=${Config.wlpID}`\n            + `&LanguageID=en_US`;\n\n        request({\n            method: \"POST\",\n            host: HOSTS.REPORTS,\n            endpoint: `/DriveWealth${queryString}`,\n            sessionKey: Sessions.get(userID),\n            body: {},\n        }, (data) => {\n            cb && cb(null, data.transaction);\n        }, err => cb && cb(err));\n    }\n\n    static getStatements(userID, accountID, startDate, endDate, cb) {\n        const queryString =\n            `?accountID=${accountID}`\n            + `&dateStart=${startDate.toISOString()}`\n            + `&dateEnd=${endDate.toISOString()}`\n            + `&type=02`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/statements${queryString}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    static getTradeConfirms(userID, accountID, startDate, endDate, cb) {\n        const queryString =\n            `?accountID=${accountID}`\n            + `&dateStart=${startDate.toISOString()}`\n            + `&dateEnd=${endDate.toISOString()}`\n            + `&type=01`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/statements${queryString}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    static getTaxDocuments(userID, accountID, startDate, endDate, cb) {\n        const queryString =\n            `?accountID=${accountID}`\n            + `&dateStart=${startDate.toISOString()}`\n            + `&dateEnd=${endDate.toISOString()}`\n            + `&type=03`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/statements${queryString}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    static generateDownloadURL(userID, accountID, fileKey, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/statements/${accountID}/${fileKey}`,\n            sessionKey: Sessions.get(userID),\n        }, (data) => {\n            cb && cb(null, data.url);\n        }, err => cb && cb(err));\n    }\n\n    static getSupportedCountries(cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/countries`,\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Reports.js","import request from \"./request\";\nimport Sessions from \"./Sessions\";\n\nexport default class Instrument {\n\n    constructor(data) {\n        for (let key of [\n            \"instrumentID\",\n            \"name\",\n            \"exchangeID\",\n            \"instrumentTypeID\",\n            \"orderSizeMax\",\n            \"orderSizeMin\",\n            \"orderSizeStep\",\n            \"rateAsk\",\n            \"rateBid\",\n            \"ratePrecision\",\n            \"symbol\",\n            \"tradeStatus\",\n            \"urlImage\",\n            \"urlInvestor\",\n            \"chaikinPgr\",\n            \"priorClose\",\n            \"marketState\",\n            \"fundamentalDataModel\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    static get TRADE_STATUSES() { return {\n        INACTIVE: \"0\",\n        ACTIVE: \"1\",\n        CLOSED: \"2\",\n    } }\n\n    static get CHART_COMPRESSIONS() { return {\n        DAY: 0,\n        MINUTE_1: 1,\n        MINUTE_5: 4,\n        MINUTE_30: 8,\n        HOUR: 9,\n        WEEK: 10\n    } }\n\n    static getBySymbol(symbol, cb) {\n        let symbols = symbol;\n        if (typeof symbol === \"string\") symbols = [symbol];\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments?symbol${symbols.length > 1 ? \"s\" : \"\"}=${symbols.join(',')}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            data = data.map(ins => new Instrument(ins));\n            cb && cb(null, typeof symbol === \"string\" ? data[0] : data);\n        }, err => cb && cb(err));\n    }\n\n    static getByID(id, includeFundamentals = true, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/instruments/${id}${includeFundamentals ? '?options=F' : ''}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, new Instrument(data));\n        }, err => cb && cb(err));\n    }\n\n    static getAll(tradeStatus, cb) {\n        if (!cb) {\n            cb = tradeStatus;\n            tradeStatus = \"-1\";\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments?tradeStatus=${tradeStatus}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.map(ins => new Instrument(ins)));\n        }, err => cb && cb(err));\n    }\n\n    static search(criteria, cb) {\n        let queryString = \"?\";\n        if (criteria.symbol) queryString += `symbol=${criteria.symbol}&`;\n        if (criteria.name) queryString += `name=${criteria.name}&`;\n\n        request({\n            method: \"GET\",\n            endpoint: `/instruments${queryString}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.map(ins => new Instrument(ins)));\n        }, err => cb && cb(err));\n    }\n\n    getQuote(cb) {\n        return Instrument.getQuote(this.symbol, cb);\n    }\n\n    static getQuote(symbol, cb) {\n        let userPassedOneSymbol = false;\n        if (!Array.isArray(symbol)) {\n            userPassedOneSymbol = true;\n            symbol = [symbol];\n        }\n        symbol = symbol.map(sym => {\n            return sym instanceof Instrument ? sym.symbol : sym;\n        });\n\n        request({\n            method: \"GET\",\n            endpoint: `/quotes?symbols=${symbol.join(\",\")}`,\n            sessionKey: Sessions.getAny(),\n            addlHeaders: {\n                \"Accept\": \"text/plain\"\n            }\n        }, (data) => {\n            let obj = {};\n            data = data.split(\"|\").slice(10);\n            for (let rawQuote of data) {\n                const parsedQuote = rawQuote.split(\",\");\n                obj[parsedQuote[0]] = {\n                    bid: Number(parsedQuote[1]),\n                    ask: Number(parsedQuote[2]),\n                };\n            }\n            if (userPassedOneSymbol) obj = obj[symbol[0]];\n            cb && cb(null, obj);\n        }, err => cb && cb(err));\n    }\n\n    getChartData() {\n        if (arguments.length === 4) {\n            return Instrument.getChartData(this.instrumentID, arguments[0], arguments[1], arguments[2], arguments[3]);\n        } else {\n            return Instrument.getChartData(this.instrumentID, arguments[0], arguments[1], arguments[2]);\n        }\n    }\n\n    static getChartData(instrumentID, compression) {\n        let cb, timeParams;\n        if (arguments.length === 5) {\n            const dateStart = arguments[2].toISOString().replace(/\\.\\d{3}/, \"\");\n            const dateEnd   = arguments[3].toISOString().replace(/\\.\\d{3}/, \"\");\n            timeParams = `dateStart=${dateStart}&dateEnd=${dateEnd}`;\n            cb = arguments[4];\n        } else {\n            timeParams = `tradingDays=${arguments[2]}`;\n            cb = arguments[3];\n        }\n\n        request({\n            method: \"GET\",\n            endpoint: `/bars?instrumentID=${instrumentID}&compression=${compression}&${timeParams}`,\n            sessionKey: Sessions.getAny(),\n        }, (data) => {\n            cb && cb(null, data.data.split(\"|\"));\n        }, err => cb && cb(err));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Instrument.js","import request from \"./request\";\nimport { Config } from \"./Config\";\nimport Sessions from \"./Sessions\";\nimport Account from \"./Account\";\n\nexport default class User {\n\n    constructor(data) {\n        for (let key of [\n            \"countryID\",\n            \"emailAddress\",\n            \"firstName\",\n            \"languageID\",\n            \"lastName\",\n            \"phoneNumber\",\n            \"referralCode\",\n            \"userID\",\n            \"username\",\n            \"wlpID\",\n            \"status\",\n            \"usCitizen\",\n            \"lastLoginWhen\",\n            \"citizenship\",\n        ]) {\n            this[key] = data[key];\n        }\n    }\n\n    getAccounts(cb) {\n        Account.getListForUserID(this.userID, cb);\n    }\n\n    // getSettings(key, cb)\n    // getSettings(cb)\n    getSettings() {\n        if (arguments.length === 1) {\n            this.getAllSettings(arguments[0]);\n        }\n        let cb = arguments[1];\n\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/settings/${arguments[0]}`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data.value);\n        }, err => cb && cb(err));\n    }\n\n    getAllSettings(cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/settings`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            let formattedData = {};\n            for (let setting of data) {\n                formattedData[setting.key] = setting.value;\n            }\n            cb && cb(null, formattedData);\n        }, err => cb && cb(err));\n    }\n\n    setSetting(key, value, cb) {\n        request({\n            method: \"POST\",\n            endpoint: `/users/${this.userID}/settings`,\n            sessionKey: Sessions.get(this.userID),\n            body: {\n                key, value\n            }\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    unsetSetting(key, cb) {\n        request({\n            method: \"DELETE\",\n            endpoint: `/users/${this.userID}/settings/${key}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    getStatus(cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${this.userID}/status`,\n            sessionKey: Sessions.get(this.userID)\n        }, (data) => {\n            cb && cb(null, data);\n        }, err => cb && cb(err));\n    }\n\n    logout() {\n        request({\n            method: \"DELETE\",\n            endpoint: `/userSessions/${Sessions.get(this.userID)}`,\n            sessionKey: Sessions.get(this.userID),\n        }, () => {\n            Sessions.remove(this.userID);\n            cb && cb(null);\n        }, err => cb && cb(err));\n    }\n\n    static get STATUSES() { return {\n        PENDING: 1,\n        APPROVED: 2,\n        REJECTED: 3,\n        REVOKED: 4,\n        CLOSED: 5,\n    } }\n\n    static getByUserID(userID, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users/${userID}`,\n            sessionKey: Sessions.get(userID)\n        }, (data) => {\n            cb && cb(null, new User(data));\n        }, err => cb && cb(err));\n    }\n\n    static login(username, password, cb) {\n        request({\n            method: \"POST\",\n            endpoint: \"/userSessions\",\n            body: {\n                username,\n                password,\n                appTypeID: Config.appTypeID,\n                appVersion: Config.appVersion,\n                languageID: \"en_US\",\n                osType: \"unknown\",\n                osVersion: \"unknown\",\n                scrRes: \"unknown\",\n                ipAddress: \"unknown\"\n            }\n        }, (data) => {\n            Sessions.save(data.userID, data.sessionKey);\n            User.getByUserID(data.userID, (err, user) => {\n                if (err) return cb && cb(err);\n                cb && cb(null, user);\n            });\n        }, err => cb && cb(err));\n    }\n\n    static isUsernameAvailable(username, cb) {\n        request({\n            method: \"GET\",\n            endpoint: `/users?username=${username}`,\n        }, () => {\n            cb && cb(null, false);\n        }, (err, statusCode) => {\n            if (statusCode === 404) return cb && cb(null, true);\n            cb && cb(err);\n        });\n    }\n\n    static create({\n        username,\n        password,\n        firstName,\n        lastName,\n        email,\n        languageID,\n        referralCode = Config.referralCode,\n        utmCampaign,\n        utmContent,\n        utmMedium,\n        utmSource,\n        utmTerm,\n    }, loginAutomatically = true, cb) {\n        if (!cb) {\n            cb = loginAutomatically;\n            loginAutomatically = true;\n        }\n\n        request({\n            method: \"POST\",\n            endpoint: \"/signups/live\",\n            body: {\n                username,\n                password,\n                firstName,\n                lastName,\n                emailAddress1: email,\n                languageID,\n                wlpID: Config.wlpID,\n                referralCode,\n                utmCampaign,\n                utmContent,\n                utmMedium,\n                utmSource,\n                utmTerm,\n            },\n        }, (data) => {\n            if (loginAutomatically) {\n                return User.login(username, password, cb);\n            } else {\n                cb && cb(null, data);\n            }\n        }, err => cb && cb(err));\n    }\n\n\tstatic update({\n\t\tuserID,\n\t\taddressLine1,\n\t\taddressLine2,\n\t\tcity,\n\t\tcountryID,\n\t\temail,\n\t\tfirstName,\n\t\tlastName,\n\t\tlanguageID,\n\t\tphoneHome,\n\t\tphoneWork,\n\t\tphone,\n\t\tstateProvince,\n\t\tzipPostalCode\n\t}, cb) {\n\t\treturn request({\n\t\t\tmethod: \"PUT\",\n\t\t\tendpoint: `/users/${userID}`,\n\t\t\tsessionKey: Sessions.get(userID),\n\t\t\tbody: {\n\t\t\t\taddressLine1,\n\t\t\t\taddressLine2,\n\t\t\t\tcity,\n\t\t\t\tcountryID,\n\t\t\t\temailAddress1: email,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\tlanguageID,\n\t\t\t\tphoneHome,\n\t\t\t\tphoneWork,\n\t\t\t\tphoneMobile: phone,\n\t\t\t\tstateProvince,\n\t\t\t\tzipPostalCode\n\t\t\t},\n\t\t}, data => {\n\t\t\tcb && cb(null, data);\n\t\t}, err => cb && cb(err));\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/User.js"]}